/* automatically generated by rust-bindgen 0.55.1 */

pub const _GLIBCXX_CSTDINT: u32 = 1;
pub const _GLIBCXX_CXX_CONFIG_H: u32 = 1;
pub const _GLIBCXX_RELEASE: u32 = 9;
pub const __GLIBCXX__: u32 = 20200408;
pub const _GLIBCXX_HAVE_ATTRIBUTE_VISIBILITY: u32 = 1;
pub const _GLIBCXX_USE_DEPRECATED: u32 = 1;
pub const _GLIBCXX_EXTERN_TEMPLATE: u32 = 1;
pub const _GLIBCXX_USE_DUAL_ABI: u32 = 1;
pub const _GLIBCXX_USE_CXX11_ABI: u32 = 1;
pub const _GLIBCXX_INLINE_VERSION: u32 = 0;
pub const _GLIBCXX_USE_ALLOCATOR_NEW: u32 = 1;
pub const _GLIBCXX_OS_DEFINES: u32 = 1;
pub const __NO_CTYPE: u32 = 1;
pub const _FEATURES_H: u32 = 1;
pub const _ISOC95_SOURCE: u32 = 1;
pub const _ISOC99_SOURCE: u32 = 1;
pub const _ISOC11_SOURCE: u32 = 1;
pub const _ISOC2X_SOURCE: u32 = 1;
pub const _POSIX_SOURCE: u32 = 1;
pub const _POSIX_C_SOURCE: u32 = 200809;
pub const _XOPEN_SOURCE: u32 = 700;
pub const _XOPEN_SOURCE_EXTENDED: u32 = 1;
pub const _LARGEFILE64_SOURCE: u32 = 1;
pub const _DEFAULT_SOURCE: u32 = 1;
pub const _ATFILE_SOURCE: u32 = 1;
pub const __GLIBC_USE_ISOC2X: u32 = 1;
pub const __USE_ISOC11: u32 = 1;
pub const __USE_ISOC99: u32 = 1;
pub const __USE_ISOC95: u32 = 1;
pub const __USE_ISOCXX11: u32 = 1;
pub const __USE_POSIX: u32 = 1;
pub const __USE_POSIX2: u32 = 1;
pub const __USE_POSIX199309: u32 = 1;
pub const __USE_POSIX199506: u32 = 1;
pub const __USE_XOPEN2K: u32 = 1;
pub const __USE_XOPEN2K8: u32 = 1;
pub const __USE_XOPEN: u32 = 1;
pub const __USE_XOPEN_EXTENDED: u32 = 1;
pub const __USE_UNIX98: u32 = 1;
pub const _LARGEFILE_SOURCE: u32 = 1;
pub const __USE_XOPEN2K8XSI: u32 = 1;
pub const __USE_XOPEN2KXSI: u32 = 1;
pub const __USE_LARGEFILE: u32 = 1;
pub const __USE_LARGEFILE64: u32 = 1;
pub const __USE_MISC: u32 = 1;
pub const __USE_ATFILE: u32 = 1;
pub const __USE_GNU: u32 = 1;
pub const __USE_FORTIFY_LEVEL: u32 = 0;
pub const __GLIBC_USE_DEPRECATED_GETS: u32 = 0;
pub const __GLIBC_USE_DEPRECATED_SCANF: u32 = 0;
pub const _STDC_PREDEF_H: u32 = 1;
pub const __STDC_IEC_559__: u32 = 1;
pub const __STDC_IEC_559_COMPLEX__: u32 = 1;
pub const __STDC_ISO_10646__: u32 = 201706;
pub const __GNU_LIBRARY__: u32 = 6;
pub const __GLIBC__: u32 = 2;
pub const __GLIBC_MINOR__: u32 = 31;
pub const _SYS_CDEFS_H: u32 = 1;
pub const __glibc_c99_flexarr_available: u32 = 1;
pub const __WORDSIZE: u32 = 64;
pub const __WORDSIZE_TIME64_COMPAT32: u32 = 1;
pub const __SYSCALL_WORDSIZE: u32 = 64;
pub const __LONG_DOUBLE_USES_FLOAT128: u32 = 0;
pub const __HAVE_GENERIC_SELECTION: u32 = 0;
pub const _GLIBCXX_CPU_DEFINES: u32 = 1;
pub const _GLIBCXX_FAST_MATH: u32 = 0;
pub const _GLIBCXX_USE_FLOAT128: u32 = 1;
pub const _GLIBCXX_HAVE_BUILTIN_HAS_UNIQ_OBJ_REP: u32 = 1;
pub const _GLIBCXX_HAVE_BUILTIN_IS_AGGREGATE: u32 = 1;
pub const _GLIBCXX_HAVE_BUILTIN_LAUNDER: u32 = 1;
pub const _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED: u32 = 1;
pub const _GLIBCXX_HAVE_ACOSF: u32 = 1;
pub const _GLIBCXX_HAVE_ACOSL: u32 = 1;
pub const _GLIBCXX_HAVE_ALIGNED_ALLOC: u32 = 1;
pub const _GLIBCXX_HAVE_ARPA_INET_H: u32 = 1;
pub const _GLIBCXX_HAVE_ASINF: u32 = 1;
pub const _GLIBCXX_HAVE_ASINL: u32 = 1;
pub const _GLIBCXX_HAVE_AS_SYMVER_DIRECTIVE: u32 = 1;
pub const _GLIBCXX_HAVE_ATAN2F: u32 = 1;
pub const _GLIBCXX_HAVE_ATAN2L: u32 = 1;
pub const _GLIBCXX_HAVE_ATANF: u32 = 1;
pub const _GLIBCXX_HAVE_ATANL: u32 = 1;
pub const _GLIBCXX_HAVE_ATOMIC_LOCK_POLICY: u32 = 1;
pub const _GLIBCXX_HAVE_AT_QUICK_EXIT: u32 = 1;
pub const _GLIBCXX_HAVE_CEILF: u32 = 1;
pub const _GLIBCXX_HAVE_CEILL: u32 = 1;
pub const _GLIBCXX_HAVE_COMPLEX_H: u32 = 1;
pub const _GLIBCXX_HAVE_COSF: u32 = 1;
pub const _GLIBCXX_HAVE_COSHF: u32 = 1;
pub const _GLIBCXX_HAVE_COSHL: u32 = 1;
pub const _GLIBCXX_HAVE_COSL: u32 = 1;
pub const _GLIBCXX_HAVE_DIRENT_H: u32 = 1;
pub const _GLIBCXX_HAVE_DLFCN_H: u32 = 1;
pub const _GLIBCXX_HAVE_EBADMSG: u32 = 1;
pub const _GLIBCXX_HAVE_ECANCELED: u32 = 1;
pub const _GLIBCXX_HAVE_ECHILD: u32 = 1;
pub const _GLIBCXX_HAVE_EIDRM: u32 = 1;
pub const _GLIBCXX_HAVE_ENDIAN_H: u32 = 1;
pub const _GLIBCXX_HAVE_ENODATA: u32 = 1;
pub const _GLIBCXX_HAVE_ENOLINK: u32 = 1;
pub const _GLIBCXX_HAVE_ENOSPC: u32 = 1;
pub const _GLIBCXX_HAVE_ENOSR: u32 = 1;
pub const _GLIBCXX_HAVE_ENOSTR: u32 = 1;
pub const _GLIBCXX_HAVE_ENOTRECOVERABLE: u32 = 1;
pub const _GLIBCXX_HAVE_ENOTSUP: u32 = 1;
pub const _GLIBCXX_HAVE_EOVERFLOW: u32 = 1;
pub const _GLIBCXX_HAVE_EOWNERDEAD: u32 = 1;
pub const _GLIBCXX_HAVE_EPERM: u32 = 1;
pub const _GLIBCXX_HAVE_EPROTO: u32 = 1;
pub const _GLIBCXX_HAVE_ETIME: u32 = 1;
pub const _GLIBCXX_HAVE_ETIMEDOUT: u32 = 1;
pub const _GLIBCXX_HAVE_ETXTBSY: u32 = 1;
pub const _GLIBCXX_HAVE_EWOULDBLOCK: u32 = 1;
pub const _GLIBCXX_HAVE_EXCEPTION_PTR_SINCE_GCC46: u32 = 1;
pub const _GLIBCXX_HAVE_EXECINFO_H: u32 = 1;
pub const _GLIBCXX_HAVE_EXPF: u32 = 1;
pub const _GLIBCXX_HAVE_EXPL: u32 = 1;
pub const _GLIBCXX_HAVE_FABSF: u32 = 1;
pub const _GLIBCXX_HAVE_FABSL: u32 = 1;
pub const _GLIBCXX_HAVE_FCNTL_H: u32 = 1;
pub const _GLIBCXX_HAVE_FENV_H: u32 = 1;
pub const _GLIBCXX_HAVE_FINITE: u32 = 1;
pub const _GLIBCXX_HAVE_FINITEF: u32 = 1;
pub const _GLIBCXX_HAVE_FINITEL: u32 = 1;
pub const _GLIBCXX_HAVE_FLOAT_H: u32 = 1;
pub const _GLIBCXX_HAVE_FLOORF: u32 = 1;
pub const _GLIBCXX_HAVE_FLOORL: u32 = 1;
pub const _GLIBCXX_HAVE_FMODF: u32 = 1;
pub const _GLIBCXX_HAVE_FMODL: u32 = 1;
pub const _GLIBCXX_HAVE_FREXPF: u32 = 1;
pub const _GLIBCXX_HAVE_FREXPL: u32 = 1;
pub const _GLIBCXX_HAVE_GETIPINFO: u32 = 1;
pub const _GLIBCXX_HAVE_GETS: u32 = 1;
pub const _GLIBCXX_HAVE_HYPOT: u32 = 1;
pub const _GLIBCXX_HAVE_HYPOTF: u32 = 1;
pub const _GLIBCXX_HAVE_HYPOTL: u32 = 1;
pub const _GLIBCXX_HAVE_ICONV: u32 = 1;
pub const _GLIBCXX_HAVE_INT64_T: u32 = 1;
pub const _GLIBCXX_HAVE_INT64_T_LONG: u32 = 1;
pub const _GLIBCXX_HAVE_INTTYPES_H: u32 = 1;
pub const _GLIBCXX_HAVE_ISINFF: u32 = 1;
pub const _GLIBCXX_HAVE_ISINFL: u32 = 1;
pub const _GLIBCXX_HAVE_ISNANF: u32 = 1;
pub const _GLIBCXX_HAVE_ISNANL: u32 = 1;
pub const _GLIBCXX_HAVE_ISWBLANK: u32 = 1;
pub const _GLIBCXX_HAVE_LC_MESSAGES: u32 = 1;
pub const _GLIBCXX_HAVE_LDEXPF: u32 = 1;
pub const _GLIBCXX_HAVE_LDEXPL: u32 = 1;
pub const _GLIBCXX_HAVE_LIBINTL_H: u32 = 1;
pub const _GLIBCXX_HAVE_LIMIT_AS: u32 = 1;
pub const _GLIBCXX_HAVE_LIMIT_DATA: u32 = 1;
pub const _GLIBCXX_HAVE_LIMIT_FSIZE: u32 = 1;
pub const _GLIBCXX_HAVE_LIMIT_RSS: u32 = 1;
pub const _GLIBCXX_HAVE_LIMIT_VMEM: u32 = 0;
pub const _GLIBCXX_HAVE_LINK: u32 = 1;
pub const _GLIBCXX_HAVE_LINUX_FUTEX: u32 = 1;
pub const _GLIBCXX_HAVE_LINUX_RANDOM_H: u32 = 1;
pub const _GLIBCXX_HAVE_LINUX_TYPES_H: u32 = 1;
pub const _GLIBCXX_HAVE_LOCALE_H: u32 = 1;
pub const _GLIBCXX_HAVE_LOG10F: u32 = 1;
pub const _GLIBCXX_HAVE_LOG10L: u32 = 1;
pub const _GLIBCXX_HAVE_LOGF: u32 = 1;
pub const _GLIBCXX_HAVE_LOGL: u32 = 1;
pub const _GLIBCXX_HAVE_MBSTATE_T: u32 = 1;
pub const _GLIBCXX_HAVE_MEMALIGN: u32 = 1;
pub const _GLIBCXX_HAVE_MEMORY_H: u32 = 1;
pub const _GLIBCXX_HAVE_MODF: u32 = 1;
pub const _GLIBCXX_HAVE_MODFF: u32 = 1;
pub const _GLIBCXX_HAVE_MODFL: u32 = 1;
pub const _GLIBCXX_HAVE_NETDB_H: u32 = 1;
pub const _GLIBCXX_HAVE_NETINET_IN_H: u32 = 1;
pub const _GLIBCXX_HAVE_NETINET_TCP_H: u32 = 1;
pub const _GLIBCXX_HAVE_POLL: u32 = 1;
pub const _GLIBCXX_HAVE_POLL_H: u32 = 1;
pub const _GLIBCXX_HAVE_POSIX_MEMALIGN: u32 = 1;
pub const _GLIBCXX_HAVE_POWF: u32 = 1;
pub const _GLIBCXX_HAVE_POWL: u32 = 1;
pub const _GLIBCXX_HAVE_QUICK_EXIT: u32 = 1;
pub const _GLIBCXX_HAVE_READLINK: u32 = 1;
pub const _GLIBCXX_HAVE_SETENV: u32 = 1;
pub const _GLIBCXX_HAVE_SINCOS: u32 = 1;
pub const _GLIBCXX_HAVE_SINCOSF: u32 = 1;
pub const _GLIBCXX_HAVE_SINCOSL: u32 = 1;
pub const _GLIBCXX_HAVE_SINF: u32 = 1;
pub const _GLIBCXX_HAVE_SINHF: u32 = 1;
pub const _GLIBCXX_HAVE_SINHL: u32 = 1;
pub const _GLIBCXX_HAVE_SINL: u32 = 1;
pub const _GLIBCXX_HAVE_SOCKATMARK: u32 = 1;
pub const _GLIBCXX_HAVE_SQRTF: u32 = 1;
pub const _GLIBCXX_HAVE_SQRTL: u32 = 1;
pub const _GLIBCXX_HAVE_STDALIGN_H: u32 = 1;
pub const _GLIBCXX_HAVE_STDBOOL_H: u32 = 1;
pub const _GLIBCXX_HAVE_STDINT_H: u32 = 1;
pub const _GLIBCXX_HAVE_STDLIB_H: u32 = 1;
pub const _GLIBCXX_HAVE_STRERROR_L: u32 = 1;
pub const _GLIBCXX_HAVE_STRERROR_R: u32 = 1;
pub const _GLIBCXX_HAVE_STRINGS_H: u32 = 1;
pub const _GLIBCXX_HAVE_STRING_H: u32 = 1;
pub const _GLIBCXX_HAVE_STRTOF: u32 = 1;
pub const _GLIBCXX_HAVE_STRTOLD: u32 = 1;
pub const _GLIBCXX_HAVE_STRUCT_DIRENT_D_TYPE: u32 = 1;
pub const _GLIBCXX_HAVE_STRXFRM_L: u32 = 1;
pub const _GLIBCXX_HAVE_SYMLINK: u32 = 1;
pub const _GLIBCXX_HAVE_SYMVER_SYMBOL_RENAMING_RUNTIME_SUPPORT: u32 = 1;
pub const _GLIBCXX_HAVE_SYS_IOCTL_H: u32 = 1;
pub const _GLIBCXX_HAVE_SYS_IPC_H: u32 = 1;
pub const _GLIBCXX_HAVE_SYS_PARAM_H: u32 = 1;
pub const _GLIBCXX_HAVE_SYS_RESOURCE_H: u32 = 1;
pub const _GLIBCXX_HAVE_SYS_SDT_H: u32 = 1;
pub const _GLIBCXX_HAVE_SYS_SEM_H: u32 = 1;
pub const _GLIBCXX_HAVE_SYS_SOCKET_H: u32 = 1;
pub const _GLIBCXX_HAVE_SYS_STATVFS_H: u32 = 1;
pub const _GLIBCXX_HAVE_SYS_STAT_H: u32 = 1;
pub const _GLIBCXX_HAVE_SYS_SYSINFO_H: u32 = 1;
pub const _GLIBCXX_HAVE_SYS_TIME_H: u32 = 1;
pub const _GLIBCXX_HAVE_SYS_TYPES_H: u32 = 1;
pub const _GLIBCXX_HAVE_SYS_UIO_H: u32 = 1;
pub const _GLIBCXX_HAVE_S_ISREG: u32 = 1;
pub const _GLIBCXX_HAVE_TANF: u32 = 1;
pub const _GLIBCXX_HAVE_TANHF: u32 = 1;
pub const _GLIBCXX_HAVE_TANHL: u32 = 1;
pub const _GLIBCXX_HAVE_TANL: u32 = 1;
pub const _GLIBCXX_HAVE_TGMATH_H: u32 = 1;
pub const _GLIBCXX_HAVE_TIMESPEC_GET: u32 = 1;
pub const _GLIBCXX_HAVE_TLS: u32 = 1;
pub const _GLIBCXX_HAVE_TRUNCATE: u32 = 1;
pub const _GLIBCXX_HAVE_UCHAR_H: u32 = 1;
pub const _GLIBCXX_HAVE_UNISTD_H: u32 = 1;
pub const _GLIBCXX_HAVE_UTIME_H: u32 = 1;
pub const _GLIBCXX_HAVE_VFWSCANF: u32 = 1;
pub const _GLIBCXX_HAVE_VSWSCANF: u32 = 1;
pub const _GLIBCXX_HAVE_VWSCANF: u32 = 1;
pub const _GLIBCXX_HAVE_WCHAR_H: u32 = 1;
pub const _GLIBCXX_HAVE_WCSTOF: u32 = 1;
pub const _GLIBCXX_HAVE_WCTYPE_H: u32 = 1;
pub const _GLIBCXX_HAVE_WRITEV: u32 = 1;
pub const _GLIBCXX_HAVE___CXA_THREAD_ATEXIT_IMPL: u32 = 1;
pub const LT_OBJDIR: &'static [u8; 7usize] = b".libs/\0";
pub const _GLIBCXX_PACKAGE_BUGREPORT: &'static [u8; 1usize] = b"\0";
pub const _GLIBCXX_PACKAGE_NAME: &'static [u8; 15usize] = b"package-unused\0";
pub const _GLIBCXX_PACKAGE_STRING: &'static [u8; 30usize] = b"package-unused version-unused\0";
pub const _GLIBCXX_PACKAGE_TARNAME: &'static [u8; 10usize] = b"libstdc++\0";
pub const _GLIBCXX_PACKAGE_URL: &'static [u8; 1usize] = b"\0";
pub const _GLIBCXX_PACKAGE__GLIBCXX_VERSION: &'static [u8; 15usize] = b"version-unused\0";
pub const STDC_HEADERS: u32 = 1;
pub const _GLIBCXX_DARWIN_USE_64_BIT_INODE: u32 = 1;
pub const _GLIBCXX11_USE_C99_COMPLEX: u32 = 1;
pub const _GLIBCXX11_USE_C99_MATH: u32 = 1;
pub const _GLIBCXX11_USE_C99_STDIO: u32 = 1;
pub const _GLIBCXX11_USE_C99_STDLIB: u32 = 1;
pub const _GLIBCXX11_USE_C99_WCHAR: u32 = 1;
pub const _GLIBCXX98_USE_C99_COMPLEX: u32 = 1;
pub const _GLIBCXX98_USE_C99_MATH: u32 = 1;
pub const _GLIBCXX98_USE_C99_STDIO: u32 = 1;
pub const _GLIBCXX98_USE_C99_STDLIB: u32 = 1;
pub const _GLIBCXX98_USE_C99_WCHAR: u32 = 1;
pub const _GLIBCXX_ATOMIC_BUILTINS: u32 = 1;
pub const _GLIBCXX_FULLY_DYNAMIC_STRING: u32 = 0;
pub const _GLIBCXX_HAS_GTHREADS: u32 = 1;
pub const _GLIBCXX_HOSTED: u32 = 1;
pub const _GLIBCXX_RES_LIMITS: u32 = 1;
pub const _GLIBCXX_STDIO_EOF: i32 = -1;
pub const _GLIBCXX_STDIO_SEEK_CUR: u32 = 1;
pub const _GLIBCXX_STDIO_SEEK_END: u32 = 2;
pub const _GLIBCXX_SYMVER: u32 = 1;
pub const _GLIBCXX_SYMVER_GNU: u32 = 1;
pub const _GLIBCXX_USE_C11_UCHAR_CXX11: u32 = 1;
pub const _GLIBCXX_USE_C99: u32 = 1;
pub const _GLIBCXX_USE_C99_COMPLEX_TR1: u32 = 1;
pub const _GLIBCXX_USE_C99_CTYPE_TR1: u32 = 1;
pub const _GLIBCXX_USE_C99_FENV_TR1: u32 = 1;
pub const _GLIBCXX_USE_C99_INTTYPES_TR1: u32 = 1;
pub const _GLIBCXX_USE_C99_INTTYPES_WCHAR_T_TR1: u32 = 1;
pub const _GLIBCXX_USE_C99_MATH_TR1: u32 = 1;
pub const _GLIBCXX_USE_C99_STDINT_TR1: u32 = 1;
pub const _GLIBCXX_USE_CLOCK_MONOTONIC: u32 = 1;
pub const _GLIBCXX_USE_CLOCK_REALTIME: u32 = 1;
pub const _GLIBCXX_USE_DECIMAL_FLOAT: u32 = 1;
pub const _GLIBCXX_USE_DEV_RANDOM: u32 = 1;
pub const _GLIBCXX_USE_FCHMOD: u32 = 1;
pub const _GLIBCXX_USE_FCHMODAT: u32 = 1;
pub const _GLIBCXX_USE_GETTIMEOFDAY: u32 = 1;
pub const _GLIBCXX_USE_GET_NPROCS: u32 = 1;
pub const _GLIBCXX_USE_INT128: u32 = 1;
pub const _GLIBCXX_USE_LFS: u32 = 1;
pub const _GLIBCXX_USE_LONG_LONG: u32 = 1;
pub const _GLIBCXX_USE_LSTAT: u32 = 1;
pub const _GLIBCXX_USE_NANOSLEEP: u32 = 1;
pub const _GLIBCXX_USE_NLS: u32 = 1;
pub const _GLIBCXX_USE_PTHREAD_RWLOCK_T: u32 = 1;
pub const _GLIBCXX_USE_RANDOM_TR1: u32 = 1;
pub const _GLIBCXX_USE_REALPATH: u32 = 1;
pub const _GLIBCXX_USE_SCHED_YIELD: u32 = 1;
pub const _GLIBCXX_USE_SC_NPROCESSORS_ONLN: u32 = 1;
pub const _GLIBCXX_USE_SENDFILE: u32 = 1;
pub const _GLIBCXX_USE_ST_MTIM: u32 = 1;
pub const _GLIBCXX_USE_TMPNAM: u32 = 1;
pub const _GLIBCXX_USE_UTIME: u32 = 1;
pub const _GLIBCXX_USE_UTIMENSAT: u32 = 1;
pub const _GLIBCXX_USE_WCHAR_T: u32 = 1;
pub const _GLIBCXX_VERBOSE: u32 = 1;
pub const _GLIBCXX_X86_RDRAND: u32 = 1;
pub const _GTHREAD_USE_MUTEX_TIMEDLOCK: u32 = 1;
pub const _STDINT_H: u32 = 1;
pub const __GLIBC_USE_LIB_EXT2: u32 = 1;
pub const __GLIBC_USE_IEC_60559_BFP_EXT: u32 = 1;
pub const __GLIBC_USE_IEC_60559_BFP_EXT_C2X: u32 = 1;
pub const __GLIBC_USE_IEC_60559_FUNCS_EXT: u32 = 1;
pub const __GLIBC_USE_IEC_60559_FUNCS_EXT_C2X: u32 = 1;
pub const __GLIBC_USE_IEC_60559_TYPES_EXT: u32 = 1;
pub const _BITS_TYPES_H: u32 = 1;
pub const __TIMESIZE: u32 = 64;
pub const _BITS_TYPESIZES_H: u32 = 1;
pub const __OFF_T_MATCHES_OFF64_T: u32 = 1;
pub const __INO_T_MATCHES_INO64_T: u32 = 1;
pub const __RLIM_T_MATCHES_RLIM64_T: u32 = 1;
pub const __STATFS_MATCHES_STATFS64: u32 = 1;
pub const __FD_SETSIZE: u32 = 1024;
pub const _BITS_TIME64_H: u32 = 1;
pub const _BITS_WCHAR_H: u32 = 1;
pub const _BITS_STDINT_INTN_H: u32 = 1;
pub const _BITS_STDINT_UINTN_H: u32 = 1;
pub const INT8_MIN: i32 = -128;
pub const INT16_MIN: i32 = -32768;
pub const INT32_MIN: i32 = -2147483648;
pub const INT8_MAX: u32 = 127;
pub const INT16_MAX: u32 = 32767;
pub const INT32_MAX: u32 = 2147483647;
pub const UINT8_MAX: u32 = 255;
pub const UINT16_MAX: u32 = 65535;
pub const UINT32_MAX: u32 = 4294967295;
pub const INT_LEAST8_MIN: i32 = -128;
pub const INT_LEAST16_MIN: i32 = -32768;
pub const INT_LEAST32_MIN: i32 = -2147483648;
pub const INT_LEAST8_MAX: u32 = 127;
pub const INT_LEAST16_MAX: u32 = 32767;
pub const INT_LEAST32_MAX: u32 = 2147483647;
pub const UINT_LEAST8_MAX: u32 = 255;
pub const UINT_LEAST16_MAX: u32 = 65535;
pub const UINT_LEAST32_MAX: u32 = 4294967295;
pub const INT_FAST8_MIN: i32 = -128;
pub const INT_FAST16_MIN: i64 = -9223372036854775808;
pub const INT_FAST32_MIN: i64 = -9223372036854775808;
pub const INT_FAST8_MAX: u32 = 127;
pub const INT_FAST16_MAX: u64 = 9223372036854775807;
pub const INT_FAST32_MAX: u64 = 9223372036854775807;
pub const UINT_FAST8_MAX: u32 = 255;
pub const UINT_FAST16_MAX: i32 = -1;
pub const UINT_FAST32_MAX: i32 = -1;
pub const INTPTR_MIN: i64 = -9223372036854775808;
pub const INTPTR_MAX: u64 = 9223372036854775807;
pub const UINTPTR_MAX: i32 = -1;
pub const PTRDIFF_MIN: i64 = -9223372036854775808;
pub const PTRDIFF_MAX: u64 = 9223372036854775807;
pub const SIG_ATOMIC_MIN: i32 = -2147483648;
pub const SIG_ATOMIC_MAX: u32 = 2147483647;
pub const SIZE_MAX: i32 = -1;
pub const WINT_MIN: u32 = 0;
pub const WINT_MAX: u32 = 4294967295;
pub const INT8_WIDTH: u32 = 8;
pub const UINT8_WIDTH: u32 = 8;
pub const INT16_WIDTH: u32 = 16;
pub const UINT16_WIDTH: u32 = 16;
pub const INT32_WIDTH: u32 = 32;
pub const UINT32_WIDTH: u32 = 32;
pub const INT64_WIDTH: u32 = 64;
pub const UINT64_WIDTH: u32 = 64;
pub const INT_LEAST8_WIDTH: u32 = 8;
pub const UINT_LEAST8_WIDTH: u32 = 8;
pub const INT_LEAST16_WIDTH: u32 = 16;
pub const UINT_LEAST16_WIDTH: u32 = 16;
pub const INT_LEAST32_WIDTH: u32 = 32;
pub const UINT_LEAST32_WIDTH: u32 = 32;
pub const INT_LEAST64_WIDTH: u32 = 64;
pub const UINT_LEAST64_WIDTH: u32 = 64;
pub const INT_FAST8_WIDTH: u32 = 8;
pub const UINT_FAST8_WIDTH: u32 = 8;
pub const INT_FAST16_WIDTH: u32 = 64;
pub const UINT_FAST16_WIDTH: u32 = 64;
pub const INT_FAST32_WIDTH: u32 = 64;
pub const UINT_FAST32_WIDTH: u32 = 64;
pub const INT_FAST64_WIDTH: u32 = 64;
pub const UINT_FAST64_WIDTH: u32 = 64;
pub const INTPTR_WIDTH: u32 = 64;
pub const UINTPTR_WIDTH: u32 = 64;
pub const INTMAX_WIDTH: u32 = 64;
pub const UINTMAX_WIDTH: u32 = 64;
pub const PTRDIFF_WIDTH: u32 = 64;
pub const SIG_ATOMIC_WIDTH: u32 = 32;
pub const SIZE_WIDTH: u32 = 64;
pub const WCHAR_WIDTH: u32 = 32;
pub const WINT_WIDTH: u32 = 32;
pub type std_size_t = ::std::os::raw::c_ulong;
pub type std_nullptr_t = *const ::std::os::raw::c_void;
pub type __u_char = ::std::os::raw::c_uchar;
pub type __u_short = ::std::os::raw::c_ushort;
pub type __u_int = ::std::os::raw::c_uint;
pub type __u_long = ::std::os::raw::c_ulong;
pub type __int8_t = ::std::os::raw::c_schar;
pub type __uint8_t = ::std::os::raw::c_uchar;
pub type __int16_t = ::std::os::raw::c_short;
pub type __uint16_t = ::std::os::raw::c_ushort;
pub type __int32_t = ::std::os::raw::c_int;
pub type __uint32_t = ::std::os::raw::c_uint;
pub type __int64_t = ::std::os::raw::c_long;
pub type __uint64_t = ::std::os::raw::c_ulong;
pub type __int_least8_t = __int8_t;
pub type __uint_least8_t = __uint8_t;
pub type __int_least16_t = __int16_t;
pub type __uint_least16_t = __uint16_t;
pub type __int_least32_t = __int32_t;
pub type __uint_least32_t = __uint32_t;
pub type __int_least64_t = __int64_t;
pub type __uint_least64_t = __uint64_t;
pub type __quad_t = ::std::os::raw::c_long;
pub type __u_quad_t = ::std::os::raw::c_ulong;
pub type __intmax_t = ::std::os::raw::c_long;
pub type __uintmax_t = ::std::os::raw::c_ulong;
pub type __dev_t = ::std::os::raw::c_ulong;
pub type __uid_t = ::std::os::raw::c_uint;
pub type __gid_t = ::std::os::raw::c_uint;
pub type __ino_t = ::std::os::raw::c_ulong;
pub type __ino64_t = ::std::os::raw::c_ulong;
pub type __mode_t = ::std::os::raw::c_uint;
pub type __nlink_t = ::std::os::raw::c_ulong;
pub type __off_t = ::std::os::raw::c_long;
pub type __off64_t = ::std::os::raw::c_long;
pub type __pid_t = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, PartialEq, Eq)]
pub struct __fsid_t {
    pub __val: [::std::os::raw::c_int; 2usize],
}
#[test]
fn bindgen_test_layout___fsid_t() {
    assert_eq!(
        ::std::mem::size_of::<__fsid_t>(),
        8usize,
        concat!("Size of: ", stringify!(__fsid_t))
    );
    assert_eq!(
        ::std::mem::align_of::<__fsid_t>(),
        4usize,
        concat!("Alignment of ", stringify!(__fsid_t))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<__fsid_t>())).__val as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(__fsid_t),
            "::",
            stringify!(__val)
        )
    );
}
pub type __clock_t = ::std::os::raw::c_long;
pub type __rlim_t = ::std::os::raw::c_ulong;
pub type __rlim64_t = ::std::os::raw::c_ulong;
pub type __id_t = ::std::os::raw::c_uint;
pub type __time_t = ::std::os::raw::c_long;
pub type __useconds_t = ::std::os::raw::c_uint;
pub type __suseconds_t = ::std::os::raw::c_long;
pub type __daddr_t = ::std::os::raw::c_int;
pub type __key_t = ::std::os::raw::c_int;
pub type __clockid_t = ::std::os::raw::c_int;
pub type __timer_t = *mut ::std::os::raw::c_void;
pub type __blksize_t = ::std::os::raw::c_long;
pub type __blkcnt_t = ::std::os::raw::c_long;
pub type __blkcnt64_t = ::std::os::raw::c_long;
pub type __fsblkcnt_t = ::std::os::raw::c_ulong;
pub type __fsblkcnt64_t = ::std::os::raw::c_ulong;
pub type __fsfilcnt_t = ::std::os::raw::c_ulong;
pub type __fsfilcnt64_t = ::std::os::raw::c_ulong;
pub type __fsword_t = ::std::os::raw::c_long;
pub type __ssize_t = ::std::os::raw::c_long;
pub type __syscall_slong_t = ::std::os::raw::c_long;
pub type __syscall_ulong_t = ::std::os::raw::c_ulong;
pub type __loff_t = __off64_t;
pub type __caddr_t = *mut ::std::os::raw::c_char;
pub type __intptr_t = ::std::os::raw::c_long;
pub type __socklen_t = ::std::os::raw::c_uint;
pub type __sig_atomic_t = ::std::os::raw::c_int;
pub type int_least8_t = __int_least8_t;
pub type int_least16_t = __int_least16_t;
pub type int_least32_t = __int_least32_t;
pub type int_least64_t = __int_least64_t;
pub type uint_least8_t = __uint_least8_t;
pub type uint_least16_t = __uint_least16_t;
pub type uint_least32_t = __uint_least32_t;
pub type uint_least64_t = __uint_least64_t;
pub type int_fast8_t = ::std::os::raw::c_schar;
pub type int_fast16_t = ::std::os::raw::c_long;
pub type int_fast32_t = ::std::os::raw::c_long;
pub type int_fast64_t = ::std::os::raw::c_long;
pub type uint_fast8_t = ::std::os::raw::c_uchar;
pub type uint_fast16_t = ::std::os::raw::c_ulong;
pub type uint_fast32_t = ::std::os::raw::c_ulong;
pub type uint_fast64_t = ::std::os::raw::c_ulong;
pub type intmax_t = __intmax_t;
pub type uintmax_t = __uintmax_t;
#[doc = ""]
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, PartialEq, Eq)]
pub struct UnityInterfaceGUID {
    pub m_GUIDHigh: ::std::os::raw::c_ulonglong,
    pub m_GUIDLow: ::std::os::raw::c_ulonglong,
}
#[test]
fn bindgen_test_layout_UnityInterfaceGUID() {
    assert_eq!(
        ::std::mem::size_of::<UnityInterfaceGUID>(),
        16usize,
        concat!("Size of: ", stringify!(UnityInterfaceGUID))
    );
    assert_eq!(
        ::std::mem::align_of::<UnityInterfaceGUID>(),
        8usize,
        concat!("Alignment of ", stringify!(UnityInterfaceGUID))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<UnityInterfaceGUID>())).m_GUIDHigh as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityInterfaceGUID),
            "::",
            stringify!(m_GUIDHigh)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<UnityInterfaceGUID>())).m_GUIDLow as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityInterfaceGUID),
            "::",
            stringify!(m_GUIDLow)
        )
    );
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, PartialEq, Eq)]
pub struct IUnityInterface {
    pub _address: u8,
}
#[test]
fn bindgen_test_layout_IUnityInterface() {
    assert_eq!(
        ::std::mem::size_of::<IUnityInterface>(),
        1usize,
        concat!("Size of: ", stringify!(IUnityInterface))
    );
    assert_eq!(
        ::std::mem::align_of::<IUnityInterface>(),
        1usize,
        concat!("Alignment of ", stringify!(IUnityInterface))
    );
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, PartialEq, Eq)]
pub struct IUnityInterfaces {
    pub GetInterface: ::std::option::Option<
        unsafe extern "C" fn(guid: UnityInterfaceGUID) -> *mut IUnityInterface,
    >,
    pub RegisterInterface: ::std::option::Option<
        unsafe extern "C" fn(guid: UnityInterfaceGUID, ptr: *mut IUnityInterface),
    >,
    pub GetInterfaceSplit: ::std::option::Option<
        unsafe extern "C" fn(
            guidHigh: ::std::os::raw::c_ulonglong,
            guidLow: ::std::os::raw::c_ulonglong,
        ) -> *mut IUnityInterface,
    >,
    pub RegisterInterfaceSplit: ::std::option::Option<
        unsafe extern "C" fn(
            guidHigh: ::std::os::raw::c_ulonglong,
            guidLow: ::std::os::raw::c_ulonglong,
            ptr: *mut IUnityInterface,
        ),
    >,
}
#[test]
fn bindgen_test_layout_IUnityInterfaces() {
    assert_eq!(
        ::std::mem::size_of::<IUnityInterfaces>(),
        32usize,
        concat!("Size of: ", stringify!(IUnityInterfaces))
    );
    assert_eq!(
        ::std::mem::align_of::<IUnityInterfaces>(),
        8usize,
        concat!("Alignment of ", stringify!(IUnityInterfaces))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IUnityInterfaces>())).GetInterface as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityInterfaces),
            "::",
            stringify!(GetInterface)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<IUnityInterfaces>())).RegisterInterface as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityInterfaces),
            "::",
            stringify!(RegisterInterface)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<IUnityInterfaces>())).GetInterfaceSplit as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityInterfaces),
            "::",
            stringify!(GetInterfaceSplit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<IUnityInterfaces>())).RegisterInterfaceSplit as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityInterfaces),
            "::",
            stringify!(RegisterInterfaceSplit)
        )
    );
}
extern "C" {
    pub fn UnityPluginLoad(unityInterfaces: *mut IUnityInterfaces);
}
extern "C" {
    pub fn UnityPluginUnload();
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct RenderSurfaceBase {
    _unused: [u8; 0],
}
pub type UnityRenderBuffer = *mut RenderSurfaceBase;
pub type UnityTextureID = ::std::os::raw::c_uint;
pub const UnityGfxRenderer_kUnityGfxRendererD3D11: UnityGfxRenderer = 2;
pub const UnityGfxRenderer_kUnityGfxRendererNull: UnityGfxRenderer = 4;
pub const UnityGfxRenderer_kUnityGfxRendererOpenGLES20: UnityGfxRenderer = 8;
pub const UnityGfxRenderer_kUnityGfxRendererOpenGLES30: UnityGfxRenderer = 11;
pub const UnityGfxRenderer_kUnityGfxRendererPS4: UnityGfxRenderer = 13;
pub const UnityGfxRenderer_kUnityGfxRendererXboxOne: UnityGfxRenderer = 14;
pub const UnityGfxRenderer_kUnityGfxRendererMetal: UnityGfxRenderer = 16;
pub const UnityGfxRenderer_kUnityGfxRendererOpenGLCore: UnityGfxRenderer = 17;
pub const UnityGfxRenderer_kUnityGfxRendererD3D12: UnityGfxRenderer = 18;
pub const UnityGfxRenderer_kUnityGfxRendererVulkan: UnityGfxRenderer = 21;
pub const UnityGfxRenderer_kUnityGfxRendererNvn: UnityGfxRenderer = 22;
pub const UnityGfxRenderer_kUnityGfxRendererXboxOneD3D12: UnityGfxRenderer = 23;
pub type UnityGfxRenderer = ::std::os::raw::c_uint;
pub const UnityGfxDeviceEventType_kUnityGfxDeviceEventInitialize: UnityGfxDeviceEventType = 0;
pub const UnityGfxDeviceEventType_kUnityGfxDeviceEventShutdown: UnityGfxDeviceEventType = 1;
pub const UnityGfxDeviceEventType_kUnityGfxDeviceEventBeforeReset: UnityGfxDeviceEventType = 2;
pub const UnityGfxDeviceEventType_kUnityGfxDeviceEventAfterReset: UnityGfxDeviceEventType = 3;
pub type UnityGfxDeviceEventType = ::std::os::raw::c_uint;
pub type IUnityGraphicsDeviceEventCallback =
    ::std::option::Option<unsafe extern "C" fn(eventType: UnityGfxDeviceEventType)>;
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, PartialEq, Eq)]
pub struct IUnityGraphics {
    pub GetRenderer: ::std::option::Option<unsafe extern "C" fn() -> UnityGfxRenderer>,
    pub RegisterDeviceEventCallback:
        ::std::option::Option<unsafe extern "C" fn(callback: IUnityGraphicsDeviceEventCallback)>,
    pub UnregisterDeviceEventCallback:
        ::std::option::Option<unsafe extern "C" fn(callback: IUnityGraphicsDeviceEventCallback)>,
    pub ReserveEventIDRange: ::std::option::Option<
        unsafe extern "C" fn(count: ::std::os::raw::c_int) -> ::std::os::raw::c_int,
    >,
}
#[test]
fn bindgen_test_layout_IUnityGraphics() {
    assert_eq!(
        ::std::mem::size_of::<IUnityGraphics>(),
        32usize,
        concat!("Size of: ", stringify!(IUnityGraphics))
    );
    assert_eq!(
        ::std::mem::align_of::<IUnityGraphics>(),
        8usize,
        concat!("Alignment of ", stringify!(IUnityGraphics))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IUnityGraphics>())).GetRenderer as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityGraphics),
            "::",
            stringify!(GetRenderer)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<IUnityGraphics>())).RegisterDeviceEventCallback as *const _
                as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityGraphics),
            "::",
            stringify!(RegisterDeviceEventCallback)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<IUnityGraphics>())).UnregisterDeviceEventCallback as *const _
                as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityGraphics),
            "::",
            stringify!(UnregisterDeviceEventCallback)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<IUnityGraphics>())).ReserveEventIDRange as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityGraphics),
            "::",
            stringify!(ReserveEventIDRange)
        )
    );
}
pub type UnityRenderingEvent =
    ::std::option::Option<unsafe extern "C" fn(eventId: ::std::os::raw::c_int)>;
pub type UnityRenderingEventAndData = ::std::option::Option<
    unsafe extern "C" fn(eventId: ::std::os::raw::c_int, data: *mut ::std::os::raw::c_void),
>;
pub type UnityProfilerMarkerId = u32;
pub type UnityProfilerCategoryId = u16;
pub type UnityProfilerThreadId = u64;
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq, Eq)]
pub struct UnityProfilerCategoryDesc {
    pub id: UnityProfilerCategoryId,
    pub reserved0: u16,
    pub rgbaColor: u32,
    pub name: *const ::std::os::raw::c_char,
}
#[test]
fn bindgen_test_layout_UnityProfilerCategoryDesc() {
    assert_eq!(
        ::std::mem::size_of::<UnityProfilerCategoryDesc>(),
        16usize,
        concat!("Size of: ", stringify!(UnityProfilerCategoryDesc))
    );
    assert_eq!(
        ::std::mem::align_of::<UnityProfilerCategoryDesc>(),
        8usize,
        concat!("Alignment of ", stringify!(UnityProfilerCategoryDesc))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<UnityProfilerCategoryDesc>())).id as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityProfilerCategoryDesc),
            "::",
            stringify!(id)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<UnityProfilerCategoryDesc>())).reserved0 as *const _ as usize
        },
        2usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityProfilerCategoryDesc),
            "::",
            stringify!(reserved0)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<UnityProfilerCategoryDesc>())).rgbaColor as *const _ as usize
        },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityProfilerCategoryDesc),
            "::",
            stringify!(rgbaColor)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<UnityProfilerCategoryDesc>())).name as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityProfilerCategoryDesc),
            "::",
            stringify!(name)
        )
    );
}
impl Default for UnityProfilerCategoryDesc {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
pub const UnityProfilerMarkerFlag__kUnityProfilerMarkerFlagDefault: UnityProfilerMarkerFlag_ = 0;
pub const UnityProfilerMarkerFlag__kUnityProfilerMarkerFlagScriptUser: UnityProfilerMarkerFlag_ = 2;
pub const UnityProfilerMarkerFlag__kUnityProfilerMarkerFlagScriptInvoke: UnityProfilerMarkerFlag_ =
    32;
pub const UnityProfilerMarkerFlag__kUnityProfilerMarkerFlagScriptEnterLeave:
    UnityProfilerMarkerFlag_ = 64;
pub const UnityProfilerMarkerFlag__kUnityProfilerMarkerFlagAvailabilityEditor:
    UnityProfilerMarkerFlag_ = 4;
pub const UnityProfilerMarkerFlag__kUnityProfilerMarkerFlagAvailabilityNonDev:
    UnityProfilerMarkerFlag_ = 8;
pub const UnityProfilerMarkerFlag__kUnityProfilerMarkerFlagWarning: UnityProfilerMarkerFlag_ = 16;
pub const UnityProfilerMarkerFlag__kUnityProfilerMarkerFlagVerbosityDebug:
    UnityProfilerMarkerFlag_ = 1024;
pub const UnityProfilerMarkerFlag__kUnityProfilerMarkerFlagVerbosityInternal:
    UnityProfilerMarkerFlag_ = 2048;
pub const UnityProfilerMarkerFlag__kUnityProfilerMarkerFlagVerbosityAdvanced:
    UnityProfilerMarkerFlag_ = 4096;
pub type UnityProfilerMarkerFlag_ = ::std::os::raw::c_uint;
pub type UnityProfilerMarkerFlags = u16;
pub const UnityProfilerMarkerEventType__kUnityProfilerMarkerEventTypeBegin:
    UnityProfilerMarkerEventType_ = 0;
pub const UnityProfilerMarkerEventType__kUnityProfilerMarkerEventTypeEnd:
    UnityProfilerMarkerEventType_ = 1;
pub const UnityProfilerMarkerEventType__kUnityProfilerMarkerEventTypeSingle:
    UnityProfilerMarkerEventType_ = 2;
pub type UnityProfilerMarkerEventType_ = ::std::os::raw::c_uint;
pub type UnityProfilerMarkerEventType = u16;
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq, Eq)]
pub struct UnityProfilerMarkerDesc {
    pub callback: *const ::std::os::raw::c_void,
    pub id: UnityProfilerMarkerId,
    pub flags: UnityProfilerMarkerFlags,
    pub categoryId: UnityProfilerCategoryId,
    pub name: *const ::std::os::raw::c_char,
    pub metaDataDesc: *const ::std::os::raw::c_void,
}
#[test]
fn bindgen_test_layout_UnityProfilerMarkerDesc() {
    assert_eq!(
        ::std::mem::size_of::<UnityProfilerMarkerDesc>(),
        32usize,
        concat!("Size of: ", stringify!(UnityProfilerMarkerDesc))
    );
    assert_eq!(
        ::std::mem::align_of::<UnityProfilerMarkerDesc>(),
        8usize,
        concat!("Alignment of ", stringify!(UnityProfilerMarkerDesc))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<UnityProfilerMarkerDesc>())).callback as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityProfilerMarkerDesc),
            "::",
            stringify!(callback)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<UnityProfilerMarkerDesc>())).id as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityProfilerMarkerDesc),
            "::",
            stringify!(id)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<UnityProfilerMarkerDesc>())).flags as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityProfilerMarkerDesc),
            "::",
            stringify!(flags)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<UnityProfilerMarkerDesc>())).categoryId as *const _ as usize
        },
        14usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityProfilerMarkerDesc),
            "::",
            stringify!(categoryId)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<UnityProfilerMarkerDesc>())).name as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityProfilerMarkerDesc),
            "::",
            stringify!(name)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<UnityProfilerMarkerDesc>())).metaDataDesc as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityProfilerMarkerDesc),
            "::",
            stringify!(metaDataDesc)
        )
    );
}
impl Default for UnityProfilerMarkerDesc {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
pub const UnityProfilerMarkerDataType__kUnityProfilerMarkerDataTypeNone:
    UnityProfilerMarkerDataType_ = 0;
pub const UnityProfilerMarkerDataType__kUnityProfilerMarkerDataTypeInstanceId:
    UnityProfilerMarkerDataType_ = 1;
pub const UnityProfilerMarkerDataType__kUnityProfilerMarkerDataTypeInt32:
    UnityProfilerMarkerDataType_ = 2;
pub const UnityProfilerMarkerDataType__kUnityProfilerMarkerDataTypeUInt32:
    UnityProfilerMarkerDataType_ = 3;
pub const UnityProfilerMarkerDataType__kUnityProfilerMarkerDataTypeInt64:
    UnityProfilerMarkerDataType_ = 4;
pub const UnityProfilerMarkerDataType__kUnityProfilerMarkerDataTypeUInt64:
    UnityProfilerMarkerDataType_ = 5;
pub const UnityProfilerMarkerDataType__kUnityProfilerMarkerDataTypeFloat:
    UnityProfilerMarkerDataType_ = 6;
pub const UnityProfilerMarkerDataType__kUnityProfilerMarkerDataTypeDouble:
    UnityProfilerMarkerDataType_ = 7;
pub const UnityProfilerMarkerDataType__kUnityProfilerMarkerDataTypeString:
    UnityProfilerMarkerDataType_ = 8;
pub const UnityProfilerMarkerDataType__kUnityProfilerMarkerDataTypeString16:
    UnityProfilerMarkerDataType_ = 9;
pub const UnityProfilerMarkerDataType__kUnityProfilerMarkerDataTypeBlob8:
    UnityProfilerMarkerDataType_ = 11;
pub type UnityProfilerMarkerDataType_ = ::std::os::raw::c_uint;
pub type UnityProfilerMarkerDataType = u8;
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq, Eq)]
pub struct UnityProfilerMarkerData {
    pub type_: UnityProfilerMarkerDataType,
    pub reserved0: u8,
    pub reserved1: u16,
    pub size: u32,
    pub ptr: *const ::std::os::raw::c_void,
}
#[test]
fn bindgen_test_layout_UnityProfilerMarkerData() {
    assert_eq!(
        ::std::mem::size_of::<UnityProfilerMarkerData>(),
        16usize,
        concat!("Size of: ", stringify!(UnityProfilerMarkerData))
    );
    assert_eq!(
        ::std::mem::align_of::<UnityProfilerMarkerData>(),
        8usize,
        concat!("Alignment of ", stringify!(UnityProfilerMarkerData))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<UnityProfilerMarkerData>())).type_ as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityProfilerMarkerData),
            "::",
            stringify!(type_)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<UnityProfilerMarkerData>())).reserved0 as *const _ as usize
        },
        1usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityProfilerMarkerData),
            "::",
            stringify!(reserved0)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<UnityProfilerMarkerData>())).reserved1 as *const _ as usize
        },
        2usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityProfilerMarkerData),
            "::",
            stringify!(reserved1)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<UnityProfilerMarkerData>())).size as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityProfilerMarkerData),
            "::",
            stringify!(size)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<UnityProfilerMarkerData>())).ptr as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityProfilerMarkerData),
            "::",
            stringify!(ptr)
        )
    );
}
impl Default for UnityProfilerMarkerData {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
pub const UnityProfilerFlowEventType__kUnityProfilerFlowEventTypeBegin:
    UnityProfilerFlowEventType_ = 0;
pub const UnityProfilerFlowEventType__kUnityProfilerFlowEventTypeNext: UnityProfilerFlowEventType_ =
    1;
pub const UnityProfilerFlowEventType__kUnityProfilerFlowEventTypeEnd: UnityProfilerFlowEventType_ =
    2;
pub type UnityProfilerFlowEventType_ = ::std::os::raw::c_uint;
pub type UnityProfilerFlowEventType = u8;
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq, Eq)]
pub struct UnityProfilerThreadDesc {
    pub threadId: u64,
    pub groupName: *const ::std::os::raw::c_char,
    pub name: *const ::std::os::raw::c_char,
}
#[test]
fn bindgen_test_layout_UnityProfilerThreadDesc() {
    assert_eq!(
        ::std::mem::size_of::<UnityProfilerThreadDesc>(),
        24usize,
        concat!("Size of: ", stringify!(UnityProfilerThreadDesc))
    );
    assert_eq!(
        ::std::mem::align_of::<UnityProfilerThreadDesc>(),
        8usize,
        concat!("Alignment of ", stringify!(UnityProfilerThreadDesc))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<UnityProfilerThreadDesc>())).threadId as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityProfilerThreadDesc),
            "::",
            stringify!(threadId)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<UnityProfilerThreadDesc>())).groupName as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityProfilerThreadDesc),
            "::",
            stringify!(groupName)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<UnityProfilerThreadDesc>())).name as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityProfilerThreadDesc),
            "::",
            stringify!(name)
        )
    );
}
impl Default for UnityProfilerThreadDesc {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type IUnityProfilerCreateCategoryCallback = ::std::option::Option<
    unsafe extern "C" fn(
        categoryDesc: *const UnityProfilerCategoryDesc,
        userData: *mut ::std::os::raw::c_void,
    ),
>;
pub type IUnityProfilerCreateMarkerCallback = ::std::option::Option<
    unsafe extern "C" fn(
        markerDesc: *const UnityProfilerMarkerDesc,
        userData: *mut ::std::os::raw::c_void,
    ),
>;
pub type IUnityProfilerMarkerEventCallback = ::std::option::Option<
    unsafe extern "C" fn(
        markerDesc: *const UnityProfilerMarkerDesc,
        eventType: UnityProfilerMarkerEventType,
        eventDataCount: u16,
        eventData: *const UnityProfilerMarkerData,
        userData: *mut ::std::os::raw::c_void,
    ),
>;
pub type IUnityProfilerFrameCallback =
    ::std::option::Option<unsafe extern "C" fn(userData: *mut ::std::os::raw::c_void)>;
pub type IUnityProfilerThreadCallback = ::std::option::Option<
    unsafe extern "C" fn(
        threadDesc: *const UnityProfilerThreadDesc,
        userData: *mut ::std::os::raw::c_void,
    ),
>;
pub type IUnityProfilerFlowEventCallback = ::std::option::Option<
    unsafe extern "C" fn(
        flowEventType: UnityProfilerFlowEventType,
        flowId: u32,
        userData: *mut ::std::os::raw::c_void,
    ),
>;
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, PartialEq, Eq)]
pub struct IUnityProfilerCallbacksV2 {
    pub RegisterCreateCategoryCallback: ::std::option::Option<
        unsafe extern "C" fn(
            callback: IUnityProfilerCreateCategoryCallback,
            userData: *mut ::std::os::raw::c_void,
        ) -> ::std::os::raw::c_int,
    >,
    pub UnregisterCreateCategoryCallback: ::std::option::Option<
        unsafe extern "C" fn(
            callback: IUnityProfilerCreateCategoryCallback,
            userData: *mut ::std::os::raw::c_void,
        ) -> ::std::os::raw::c_int,
    >,
    pub RegisterCreateMarkerCallback: ::std::option::Option<
        unsafe extern "C" fn(
            callback: IUnityProfilerCreateMarkerCallback,
            userData: *mut ::std::os::raw::c_void,
        ) -> ::std::os::raw::c_int,
    >,
    pub UnregisterCreateMarkerCallback: ::std::option::Option<
        unsafe extern "C" fn(
            callback: IUnityProfilerCreateMarkerCallback,
            userData: *mut ::std::os::raw::c_void,
        ) -> ::std::os::raw::c_int,
    >,
    pub RegisterMarkerEventCallback: ::std::option::Option<
        unsafe extern "C" fn(
            markerDesc: *const UnityProfilerMarkerDesc,
            callback: IUnityProfilerMarkerEventCallback,
            userData: *mut ::std::os::raw::c_void,
        ) -> ::std::os::raw::c_int,
    >,
    pub UnregisterMarkerEventCallback: ::std::option::Option<
        unsafe extern "C" fn(
            markerDesc: *const UnityProfilerMarkerDesc,
            callback: IUnityProfilerMarkerEventCallback,
            userData: *mut ::std::os::raw::c_void,
        ) -> ::std::os::raw::c_int,
    >,
    pub RegisterFrameCallback: ::std::option::Option<
        unsafe extern "C" fn(
            callback: IUnityProfilerFrameCallback,
            userData: *mut ::std::os::raw::c_void,
        ) -> ::std::os::raw::c_int,
    >,
    pub UnregisterFrameCallback: ::std::option::Option<
        unsafe extern "C" fn(
            callback: IUnityProfilerFrameCallback,
            userData: *mut ::std::os::raw::c_void,
        ) -> ::std::os::raw::c_int,
    >,
    pub RegisterCreateThreadCallback: ::std::option::Option<
        unsafe extern "C" fn(
            callback: IUnityProfilerThreadCallback,
            userData: *mut ::std::os::raw::c_void,
        ) -> ::std::os::raw::c_int,
    >,
    pub UnregisterCreateThreadCallback: ::std::option::Option<
        unsafe extern "C" fn(
            callback: IUnityProfilerThreadCallback,
            userData: *mut ::std::os::raw::c_void,
        ) -> ::std::os::raw::c_int,
    >,
    pub RegisterFlowEventCallback: ::std::option::Option<
        unsafe extern "C" fn(
            callback: IUnityProfilerFlowEventCallback,
            userData: *mut ::std::os::raw::c_void,
        ) -> ::std::os::raw::c_int,
    >,
    pub UnregisterFlowEventCallback: ::std::option::Option<
        unsafe extern "C" fn(
            callback: IUnityProfilerFlowEventCallback,
            userData: *mut ::std::os::raw::c_void,
        ) -> ::std::os::raw::c_int,
    >,
}
#[test]
fn bindgen_test_layout_IUnityProfilerCallbacksV2() {
    assert_eq!(
        ::std::mem::size_of::<IUnityProfilerCallbacksV2>(),
        96usize,
        concat!("Size of: ", stringify!(IUnityProfilerCallbacksV2))
    );
    assert_eq!(
        ::std::mem::align_of::<IUnityProfilerCallbacksV2>(),
        8usize,
        concat!("Alignment of ", stringify!(IUnityProfilerCallbacksV2))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<IUnityProfilerCallbacksV2>())).RegisterCreateCategoryCallback
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityProfilerCallbacksV2),
            "::",
            stringify!(RegisterCreateCategoryCallback)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<IUnityProfilerCallbacksV2>())).UnregisterCreateCategoryCallback
                as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityProfilerCallbacksV2),
            "::",
            stringify!(UnregisterCreateCategoryCallback)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<IUnityProfilerCallbacksV2>())).RegisterCreateMarkerCallback
                as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityProfilerCallbacksV2),
            "::",
            stringify!(RegisterCreateMarkerCallback)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<IUnityProfilerCallbacksV2>())).UnregisterCreateMarkerCallback
                as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityProfilerCallbacksV2),
            "::",
            stringify!(UnregisterCreateMarkerCallback)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<IUnityProfilerCallbacksV2>())).RegisterMarkerEventCallback
                as *const _ as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityProfilerCallbacksV2),
            "::",
            stringify!(RegisterMarkerEventCallback)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<IUnityProfilerCallbacksV2>())).UnregisterMarkerEventCallback
                as *const _ as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityProfilerCallbacksV2),
            "::",
            stringify!(UnregisterMarkerEventCallback)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<IUnityProfilerCallbacksV2>())).RegisterFrameCallback as *const _
                as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityProfilerCallbacksV2),
            "::",
            stringify!(RegisterFrameCallback)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<IUnityProfilerCallbacksV2>())).UnregisterFrameCallback
                as *const _ as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityProfilerCallbacksV2),
            "::",
            stringify!(UnregisterFrameCallback)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<IUnityProfilerCallbacksV2>())).RegisterCreateThreadCallback
                as *const _ as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityProfilerCallbacksV2),
            "::",
            stringify!(RegisterCreateThreadCallback)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<IUnityProfilerCallbacksV2>())).UnregisterCreateThreadCallback
                as *const _ as usize
        },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityProfilerCallbacksV2),
            "::",
            stringify!(UnregisterCreateThreadCallback)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<IUnityProfilerCallbacksV2>())).RegisterFlowEventCallback
                as *const _ as usize
        },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityProfilerCallbacksV2),
            "::",
            stringify!(RegisterFlowEventCallback)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<IUnityProfilerCallbacksV2>())).UnregisterFlowEventCallback
                as *const _ as usize
        },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityProfilerCallbacksV2),
            "::",
            stringify!(UnregisterFlowEventCallback)
        )
    );
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, PartialEq, Eq)]
pub struct IUnityProfilerCallbacks {
    pub RegisterCreateCategoryCallback: ::std::option::Option<
        unsafe extern "C" fn(
            callback: IUnityProfilerCreateCategoryCallback,
            userData: *mut ::std::os::raw::c_void,
        ) -> ::std::os::raw::c_int,
    >,
    pub UnregisterCreateCategoryCallback: ::std::option::Option<
        unsafe extern "C" fn(
            callback: IUnityProfilerCreateCategoryCallback,
            userData: *mut ::std::os::raw::c_void,
        ) -> ::std::os::raw::c_int,
    >,
    pub RegisterCreateMarkerCallback: ::std::option::Option<
        unsafe extern "C" fn(
            callback: IUnityProfilerCreateMarkerCallback,
            userData: *mut ::std::os::raw::c_void,
        ) -> ::std::os::raw::c_int,
    >,
    pub UnregisterCreateMarkerCallback: ::std::option::Option<
        unsafe extern "C" fn(
            callback: IUnityProfilerCreateMarkerCallback,
            userData: *mut ::std::os::raw::c_void,
        ) -> ::std::os::raw::c_int,
    >,
    pub RegisterMarkerEventCallback: ::std::option::Option<
        unsafe extern "C" fn(
            markerDesc: *const UnityProfilerMarkerDesc,
            callback: IUnityProfilerMarkerEventCallback,
            userData: *mut ::std::os::raw::c_void,
        ) -> ::std::os::raw::c_int,
    >,
    pub UnregisterMarkerEventCallback: ::std::option::Option<
        unsafe extern "C" fn(
            markerDesc: *const UnityProfilerMarkerDesc,
            callback: IUnityProfilerMarkerEventCallback,
            userData: *mut ::std::os::raw::c_void,
        ) -> ::std::os::raw::c_int,
    >,
    pub RegisterFrameCallback: ::std::option::Option<
        unsafe extern "C" fn(
            callback: IUnityProfilerFrameCallback,
            userData: *mut ::std::os::raw::c_void,
        ) -> ::std::os::raw::c_int,
    >,
    pub UnregisterFrameCallback: ::std::option::Option<
        unsafe extern "C" fn(
            callback: IUnityProfilerFrameCallback,
            userData: *mut ::std::os::raw::c_void,
        ) -> ::std::os::raw::c_int,
    >,
    pub RegisterCreateThreadCallback: ::std::option::Option<
        unsafe extern "C" fn(
            callback: IUnityProfilerThreadCallback,
            userData: *mut ::std::os::raw::c_void,
        ) -> ::std::os::raw::c_int,
    >,
    pub UnregisterCreateThreadCallback: ::std::option::Option<
        unsafe extern "C" fn(
            callback: IUnityProfilerThreadCallback,
            userData: *mut ::std::os::raw::c_void,
        ) -> ::std::os::raw::c_int,
    >,
}
#[test]
fn bindgen_test_layout_IUnityProfilerCallbacks() {
    assert_eq!(
        ::std::mem::size_of::<IUnityProfilerCallbacks>(),
        80usize,
        concat!("Size of: ", stringify!(IUnityProfilerCallbacks))
    );
    assert_eq!(
        ::std::mem::align_of::<IUnityProfilerCallbacks>(),
        8usize,
        concat!("Alignment of ", stringify!(IUnityProfilerCallbacks))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<IUnityProfilerCallbacks>())).RegisterCreateCategoryCallback
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityProfilerCallbacks),
            "::",
            stringify!(RegisterCreateCategoryCallback)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<IUnityProfilerCallbacks>())).UnregisterCreateCategoryCallback
                as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityProfilerCallbacks),
            "::",
            stringify!(UnregisterCreateCategoryCallback)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<IUnityProfilerCallbacks>())).RegisterCreateMarkerCallback
                as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityProfilerCallbacks),
            "::",
            stringify!(RegisterCreateMarkerCallback)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<IUnityProfilerCallbacks>())).UnregisterCreateMarkerCallback
                as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityProfilerCallbacks),
            "::",
            stringify!(UnregisterCreateMarkerCallback)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<IUnityProfilerCallbacks>())).RegisterMarkerEventCallback
                as *const _ as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityProfilerCallbacks),
            "::",
            stringify!(RegisterMarkerEventCallback)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<IUnityProfilerCallbacks>())).UnregisterMarkerEventCallback
                as *const _ as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityProfilerCallbacks),
            "::",
            stringify!(UnregisterMarkerEventCallback)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<IUnityProfilerCallbacks>())).RegisterFrameCallback as *const _
                as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityProfilerCallbacks),
            "::",
            stringify!(RegisterFrameCallback)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<IUnityProfilerCallbacks>())).UnregisterFrameCallback as *const _
                as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityProfilerCallbacks),
            "::",
            stringify!(UnregisterFrameCallback)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<IUnityProfilerCallbacks>())).RegisterCreateThreadCallback
                as *const _ as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityProfilerCallbacks),
            "::",
            stringify!(RegisterCreateThreadCallback)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<IUnityProfilerCallbacks>())).UnregisterCreateThreadCallback
                as *const _ as usize
        },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityProfilerCallbacks),
            "::",
            stringify!(UnregisterCreateThreadCallback)
        )
    );
}
pub const UnityRenderingExtEventType_kUnityRenderingExtEventSetStereoTarget:
    UnityRenderingExtEventType = 0;
pub const UnityRenderingExtEventType_kUnityRenderingExtEventSetStereoEye:
    UnityRenderingExtEventType = 1;
pub const UnityRenderingExtEventType_kUnityRenderingExtEventStereoRenderingDone:
    UnityRenderingExtEventType = 2;
pub const UnityRenderingExtEventType_kUnityRenderingExtEventBeforeDrawCall:
    UnityRenderingExtEventType = 3;
pub const UnityRenderingExtEventType_kUnityRenderingExtEventAfterDrawCall:
    UnityRenderingExtEventType = 4;
pub const UnityRenderingExtEventType_kUnityRenderingExtEventCustomGrab: UnityRenderingExtEventType =
    5;
pub const UnityRenderingExtEventType_kUnityRenderingExtEventCustomBlit: UnityRenderingExtEventType =
    6;
pub const UnityRenderingExtEventType_kUnityRenderingExtEventUpdateTextureBegin:
    UnityRenderingExtEventType = 7;
pub const UnityRenderingExtEventType_kUnityRenderingExtEventUpdateTextureEnd:
    UnityRenderingExtEventType = 8;
pub const UnityRenderingExtEventType_kUnityRenderingExtEventUpdateTextureBeginV1:
    UnityRenderingExtEventType = 7;
pub const UnityRenderingExtEventType_kUnityRenderingExtEventUpdateTextureEndV1:
    UnityRenderingExtEventType = 8;
pub const UnityRenderingExtEventType_kUnityRenderingExtEventUpdateTextureBeginV2:
    UnityRenderingExtEventType = 9;
pub const UnityRenderingExtEventType_kUnityRenderingExtEventUpdateTextureEndV2:
    UnityRenderingExtEventType = 10;
pub const UnityRenderingExtEventType_kUnityRenderingExtEventCount: UnityRenderingExtEventType = 11;
pub const UnityRenderingExtEventType_kUnityRenderingExtUserEventsStart: UnityRenderingExtEventType =
    11;
pub type UnityRenderingExtEventType = ::std::os::raw::c_uint;
pub const UnityRenderingExtCustomBlitCommands_kUnityRenderingExtCustomBlitVRFlush:
    UnityRenderingExtCustomBlitCommands = 0;
pub const UnityRenderingExtCustomBlitCommands_kUnityRenderingExtCustomBlitCount:
    UnityRenderingExtCustomBlitCommands = 1;
pub const UnityRenderingExtCustomBlitCommands_kUnityRenderingExtUserCustomBlitStart:
    UnityRenderingExtCustomBlitCommands = 1;
pub type UnityRenderingExtCustomBlitCommands = ::std::os::raw::c_uint;
pub const UnityRenderingExtQueryType_kUnityRenderingExtQueryOverrideViewport:
    UnityRenderingExtQueryType = 1;
pub const UnityRenderingExtQueryType_kUnityRenderingExtQueryOverrideScissor:
    UnityRenderingExtQueryType = 2;
pub const UnityRenderingExtQueryType_kUnityRenderingExtQueryOverrideVROcclussionMesh:
    UnityRenderingExtQueryType = 4;
pub const UnityRenderingExtQueryType_kUnityRenderingExtQueryOverrideVRSinglePass:
    UnityRenderingExtQueryType = 8;
pub const UnityRenderingExtQueryType_kUnityRenderingExtQueryKeepOriginalDoubleWideWidth_DEPRECATED : UnityRenderingExtQueryType = 16 ;
pub const UnityRenderingExtQueryType_kUnityRenderingExtQueryRequestVRFlushCallback:
    UnityRenderingExtQueryType = 32;
pub type UnityRenderingExtQueryType = ::std::os::raw::c_uint;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatNone:
    UnityRenderingExtTextureFormat = 0;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatFirst:
    UnityRenderingExtTextureFormat = 0;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR8_SRGB:
    UnityRenderingExtTextureFormat = 1;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR8G8_SRGB:
    UnityRenderingExtTextureFormat = 2;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR8G8B8_SRGB:
    UnityRenderingExtTextureFormat = 3;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR8G8B8A8_SRGB:
    UnityRenderingExtTextureFormat = 4;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR8_UNorm:
    UnityRenderingExtTextureFormat = 5;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR8G8_UNorm:
    UnityRenderingExtTextureFormat = 6;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR8G8B8_UNorm:
    UnityRenderingExtTextureFormat = 7;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR8G8B8A8_UNorm:
    UnityRenderingExtTextureFormat = 8;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR8_SNorm:
    UnityRenderingExtTextureFormat = 9;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR8G8_SNorm:
    UnityRenderingExtTextureFormat = 10;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR8G8B8_SNorm:
    UnityRenderingExtTextureFormat = 11;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR8G8B8A8_SNorm:
    UnityRenderingExtTextureFormat = 12;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR8_UInt:
    UnityRenderingExtTextureFormat = 13;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR8G8_UInt:
    UnityRenderingExtTextureFormat = 14;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR8G8B8_UInt:
    UnityRenderingExtTextureFormat = 15;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR8G8B8A8_UInt:
    UnityRenderingExtTextureFormat = 16;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR8_SInt:
    UnityRenderingExtTextureFormat = 17;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR8G8_SInt:
    UnityRenderingExtTextureFormat = 18;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR8G8B8_SInt:
    UnityRenderingExtTextureFormat = 19;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR8G8B8A8_SInt:
    UnityRenderingExtTextureFormat = 20;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR16_UNorm:
    UnityRenderingExtTextureFormat = 21;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR16G16_UNorm:
    UnityRenderingExtTextureFormat = 22;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR16G16B16_UNorm:
    UnityRenderingExtTextureFormat = 23;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR16G16B16A16_UNorm:
    UnityRenderingExtTextureFormat = 24;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR16_SNorm:
    UnityRenderingExtTextureFormat = 25;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR16G16_SNorm:
    UnityRenderingExtTextureFormat = 26;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR16G16B16_SNorm:
    UnityRenderingExtTextureFormat = 27;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR16G16B16A16_SNorm:
    UnityRenderingExtTextureFormat = 28;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR16_UInt:
    UnityRenderingExtTextureFormat = 29;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR16G16_UInt:
    UnityRenderingExtTextureFormat = 30;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR16G16B16_UInt:
    UnityRenderingExtTextureFormat = 31;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR16G16B16A16_UInt:
    UnityRenderingExtTextureFormat = 32;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR16_SInt:
    UnityRenderingExtTextureFormat = 33;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR16G16_SInt:
    UnityRenderingExtTextureFormat = 34;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR16G16B16_SInt:
    UnityRenderingExtTextureFormat = 35;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR16G16B16A16_SInt:
    UnityRenderingExtTextureFormat = 36;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR32_UInt:
    UnityRenderingExtTextureFormat = 37;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR32G32_UInt:
    UnityRenderingExtTextureFormat = 38;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR32G32B32_UInt:
    UnityRenderingExtTextureFormat = 39;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR32G32B32A32_UInt:
    UnityRenderingExtTextureFormat = 40;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR32_SInt:
    UnityRenderingExtTextureFormat = 41;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR32G32_SInt:
    UnityRenderingExtTextureFormat = 42;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR32G32B32_SInt:
    UnityRenderingExtTextureFormat = 43;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR32G32B32A32_SInt:
    UnityRenderingExtTextureFormat = 44;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR16_SFloat:
    UnityRenderingExtTextureFormat = 45;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR16G16_SFloat:
    UnityRenderingExtTextureFormat = 46;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR16G16B16_SFloat:
    UnityRenderingExtTextureFormat = 47;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR16G16B16A16_SFloat:
    UnityRenderingExtTextureFormat = 48;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR32_SFloat:
    UnityRenderingExtTextureFormat = 49;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR32G32_SFloat:
    UnityRenderingExtTextureFormat = 50;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR32G32B32_SFloat:
    UnityRenderingExtTextureFormat = 51;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR32G32B32A32_SFloat:
    UnityRenderingExtTextureFormat = 52;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatL8_UNorm:
    UnityRenderingExtTextureFormat = 53;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatA8_UNorm:
    UnityRenderingExtTextureFormat = 54;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatA16_UNorm:
    UnityRenderingExtTextureFormat = 55;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatB8G8R8_SRGB:
    UnityRenderingExtTextureFormat = 56;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatB8G8R8A8_SRGB:
    UnityRenderingExtTextureFormat = 57;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatB8G8R8_UNorm:
    UnityRenderingExtTextureFormat = 58;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatB8G8R8A8_UNorm:
    UnityRenderingExtTextureFormat = 59;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatB8G8R8_SNorm:
    UnityRenderingExtTextureFormat = 60;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatB8G8R8A8_SNorm:
    UnityRenderingExtTextureFormat = 61;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatB8G8R8_UInt:
    UnityRenderingExtTextureFormat = 62;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatB8G8R8A8_UInt:
    UnityRenderingExtTextureFormat = 63;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatB8G8R8_SInt:
    UnityRenderingExtTextureFormat = 64;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatB8G8R8A8_SInt:
    UnityRenderingExtTextureFormat = 65;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR4G4B4A4_UNormPack16:
    UnityRenderingExtTextureFormat = 66;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatB4G4R4A4_UNormPack16:
    UnityRenderingExtTextureFormat = 67;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR5G6B5_UNormPack16:
    UnityRenderingExtTextureFormat = 68;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatB5G6R5_UNormPack16:
    UnityRenderingExtTextureFormat = 69;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR5G5B5A1_UNormPack16:
    UnityRenderingExtTextureFormat = 70;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatB5G5R5A1_UNormPack16:
    UnityRenderingExtTextureFormat = 71;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatA1R5G5B5_UNormPack16:
    UnityRenderingExtTextureFormat = 72;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatE5B9G9R9_UFloatPack32:
    UnityRenderingExtTextureFormat = 73;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatB10G11R11_UFloatPack32:
    UnityRenderingExtTextureFormat = 74;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatA2B10G10R10_UNormPack32:
    UnityRenderingExtTextureFormat = 75;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatA2B10G10R10_UIntPack32:
    UnityRenderingExtTextureFormat = 76;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatA2B10G10R10_SIntPack32:
    UnityRenderingExtTextureFormat = 77;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatA2R10G10B10_UNormPack32:
    UnityRenderingExtTextureFormat = 78;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatA2R10G10B10_UIntPack32:
    UnityRenderingExtTextureFormat = 79;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatA2R10G10B10_SIntPack32:
    UnityRenderingExtTextureFormat = 80;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatA2R10G10B10_XRSRGBPack32:
    UnityRenderingExtTextureFormat = 81;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatA2R10G10B10_XRUNormPack32:
    UnityRenderingExtTextureFormat = 82;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR10G10B10_XRSRGBPack32:
    UnityRenderingExtTextureFormat = 83;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR10G10B10_XRUNormPack32:
    UnityRenderingExtTextureFormat = 84;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatA10R10G10B10_XRSRGBPack32:
    UnityRenderingExtTextureFormat = 85;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatA10R10G10B10_XRUNormPack32:
    UnityRenderingExtTextureFormat = 86;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatA8R8G8B8_SRGB:
    UnityRenderingExtTextureFormat = 87;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatA8R8G8B8_UNorm:
    UnityRenderingExtTextureFormat = 88;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatA32R32G32B32_SFloat:
    UnityRenderingExtTextureFormat = 89;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatD16_UNorm:
    UnityRenderingExtTextureFormat = 90;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatD24_UNorm:
    UnityRenderingExtTextureFormat = 91;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatD24_UNorm_S8_UInt:
    UnityRenderingExtTextureFormat = 92;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatD32_SFloat:
    UnityRenderingExtTextureFormat = 93;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatD32_SFloat_S8_Uint:
    UnityRenderingExtTextureFormat = 94;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatS8_Uint:
    UnityRenderingExtTextureFormat = 95;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatRGBA_DXT1_SRGB:
    UnityRenderingExtTextureFormat = 96;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatRGBA_DXT1_UNorm:
    UnityRenderingExtTextureFormat = 97;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatRGBA_DXT3_SRGB:
    UnityRenderingExtTextureFormat = 98;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatRGBA_DXT3_UNorm:
    UnityRenderingExtTextureFormat = 99;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatRGBA_DXT5_SRGB:
    UnityRenderingExtTextureFormat = 100;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatRGBA_DXT5_UNorm:
    UnityRenderingExtTextureFormat = 101;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR_BC4_UNorm:
    UnityRenderingExtTextureFormat = 102;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR_BC4_SNorm:
    UnityRenderingExtTextureFormat = 103;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatRG_BC5_UNorm:
    UnityRenderingExtTextureFormat = 104;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatRG_BC5_SNorm:
    UnityRenderingExtTextureFormat = 105;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatRGB_BC6H_UFloat:
    UnityRenderingExtTextureFormat = 106;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatRGB_BC6H_SFloat:
    UnityRenderingExtTextureFormat = 107;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatRGBA_BC7_SRGB:
    UnityRenderingExtTextureFormat = 108;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatRGBA_BC7_UNorm:
    UnityRenderingExtTextureFormat = 109;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatRGB_PVRTC_2Bpp_SRGB:
    UnityRenderingExtTextureFormat = 110;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatRGB_PVRTC_2Bpp_UNorm:
    UnityRenderingExtTextureFormat = 111;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatRGB_PVRTC_4Bpp_SRGB:
    UnityRenderingExtTextureFormat = 112;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatRGB_PVRTC_4Bpp_UNorm:
    UnityRenderingExtTextureFormat = 113;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatRGBA_PVRTC_2Bpp_SRGB:
    UnityRenderingExtTextureFormat = 114;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatRGBA_PVRTC_2Bpp_UNorm:
    UnityRenderingExtTextureFormat = 115;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatRGBA_PVRTC_4Bpp_SRGB:
    UnityRenderingExtTextureFormat = 116;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatRGBA_PVRTC_4Bpp_UNorm:
    UnityRenderingExtTextureFormat = 117;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatRGB_ETC_UNorm:
    UnityRenderingExtTextureFormat = 118;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatRGB_ETC2_SRGB:
    UnityRenderingExtTextureFormat = 119;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatRGB_ETC2_UNorm:
    UnityRenderingExtTextureFormat = 120;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatRGB_A1_ETC2_SRGB:
    UnityRenderingExtTextureFormat = 121;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatRGB_A1_ETC2_UNorm:
    UnityRenderingExtTextureFormat = 122;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatRGBA_ETC2_SRGB:
    UnityRenderingExtTextureFormat = 123;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatRGBA_ETC2_UNorm:
    UnityRenderingExtTextureFormat = 124;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR_EAC_UNorm:
    UnityRenderingExtTextureFormat = 125;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatR_EAC_SNorm:
    UnityRenderingExtTextureFormat = 126;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatRG_EAC_UNorm:
    UnityRenderingExtTextureFormat = 127;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatRG_EAC_SNorm:
    UnityRenderingExtTextureFormat = 128;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatRGBA_ASTC4X4_SRGB:
    UnityRenderingExtTextureFormat = 129;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatRGBA_ASTC4X4_UNorm:
    UnityRenderingExtTextureFormat = 130;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatRGBA_ASTC5X5_SRGB:
    UnityRenderingExtTextureFormat = 131;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatRGBA_ASTC5X5_UNorm:
    UnityRenderingExtTextureFormat = 132;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatRGBA_ASTC6X6_SRGB:
    UnityRenderingExtTextureFormat = 133;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatRGBA_ASTC6X6_UNorm:
    UnityRenderingExtTextureFormat = 134;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatRGBA_ASTC8X8_SRGB:
    UnityRenderingExtTextureFormat = 135;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatRGBA_ASTC8X8_UNorm:
    UnityRenderingExtTextureFormat = 136;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatRGBA_ASTC10X10_SRGB:
    UnityRenderingExtTextureFormat = 137;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatRGBA_ASTC10X10_UNorm:
    UnityRenderingExtTextureFormat = 138;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatRGBA_ASTC12X12_SRGB:
    UnityRenderingExtTextureFormat = 139;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatRGBA_ASTC12X12_UNorm:
    UnityRenderingExtTextureFormat = 140;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatYUV2:
    UnityRenderingExtTextureFormat = 141;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatDepthAuto:
    UnityRenderingExtTextureFormat = 142;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatShadowAuto:
    UnityRenderingExtTextureFormat = 143;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatVideoAuto:
    UnityRenderingExtTextureFormat = 144;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatRGBA_ASTC4X4_UFloat:
    UnityRenderingExtTextureFormat = 145;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatRGBA_ASTC5X5_UFloat:
    UnityRenderingExtTextureFormat = 146;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatRGBA_ASTC6X6_UFloat:
    UnityRenderingExtTextureFormat = 147;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatRGBA_ASTC8X8_UFloat:
    UnityRenderingExtTextureFormat = 148;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatRGBA_ASTC10X10_UFloat:
    UnityRenderingExtTextureFormat = 149;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatRGBA_ASTC12X12_UFloat:
    UnityRenderingExtTextureFormat = 150;
pub const UnityRenderingExtTextureFormat_kUnityRenderingExtFormatLast:
    UnityRenderingExtTextureFormat = 150;
pub type UnityRenderingExtTextureFormat = ::std::os::raw::c_uint;
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq, Eq)]
pub struct UnityRenderingExtBeforeDrawCallParams {
    pub vertexShader: *mut ::std::os::raw::c_void,
    pub fragmentShader: *mut ::std::os::raw::c_void,
    pub geometryShader: *mut ::std::os::raw::c_void,
    pub hullShader: *mut ::std::os::raw::c_void,
    pub domainShader: *mut ::std::os::raw::c_void,
    pub eyeIndex: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_UnityRenderingExtBeforeDrawCallParams() {
    assert_eq!(
        ::std::mem::size_of::<UnityRenderingExtBeforeDrawCallParams>(),
        48usize,
        concat!(
            "Size of: ",
            stringify!(UnityRenderingExtBeforeDrawCallParams)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<UnityRenderingExtBeforeDrawCallParams>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(UnityRenderingExtBeforeDrawCallParams)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<UnityRenderingExtBeforeDrawCallParams>())).vertexShader
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityRenderingExtBeforeDrawCallParams),
            "::",
            stringify!(vertexShader)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<UnityRenderingExtBeforeDrawCallParams>())).fragmentShader
                as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityRenderingExtBeforeDrawCallParams),
            "::",
            stringify!(fragmentShader)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<UnityRenderingExtBeforeDrawCallParams>())).geometryShader
                as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityRenderingExtBeforeDrawCallParams),
            "::",
            stringify!(geometryShader)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<UnityRenderingExtBeforeDrawCallParams>())).hullShader as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityRenderingExtBeforeDrawCallParams),
            "::",
            stringify!(hullShader)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<UnityRenderingExtBeforeDrawCallParams>())).domainShader
                as *const _ as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityRenderingExtBeforeDrawCallParams),
            "::",
            stringify!(domainShader)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<UnityRenderingExtBeforeDrawCallParams>())).eyeIndex as *const _
                as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityRenderingExtBeforeDrawCallParams),
            "::",
            stringify!(eyeIndex)
        )
    );
}
impl Default for UnityRenderingExtBeforeDrawCallParams {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq, Eq)]
pub struct UnityRenderingExtCustomBlitParams {
    pub source: UnityTextureID,
    pub destination: UnityRenderBuffer,
    pub command: ::std::os::raw::c_uint,
    pub commandParam: ::std::os::raw::c_uint,
    pub commandFlags: ::std::os::raw::c_uint,
}
#[test]
fn bindgen_test_layout_UnityRenderingExtCustomBlitParams() {
    assert_eq!(
        ::std::mem::size_of::<UnityRenderingExtCustomBlitParams>(),
        32usize,
        concat!("Size of: ", stringify!(UnityRenderingExtCustomBlitParams))
    );
    assert_eq!(
        ::std::mem::align_of::<UnityRenderingExtCustomBlitParams>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(UnityRenderingExtCustomBlitParams)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<UnityRenderingExtCustomBlitParams>())).source as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityRenderingExtCustomBlitParams),
            "::",
            stringify!(source)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<UnityRenderingExtCustomBlitParams>())).destination as *const _
                as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityRenderingExtCustomBlitParams),
            "::",
            stringify!(destination)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<UnityRenderingExtCustomBlitParams>())).command as *const _
                as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityRenderingExtCustomBlitParams),
            "::",
            stringify!(command)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<UnityRenderingExtCustomBlitParams>())).commandParam as *const _
                as usize
        },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityRenderingExtCustomBlitParams),
            "::",
            stringify!(commandParam)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<UnityRenderingExtCustomBlitParams>())).commandFlags as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityRenderingExtCustomBlitParams),
            "::",
            stringify!(commandFlags)
        )
    );
}
impl Default for UnityRenderingExtCustomBlitParams {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq, Eq)]
pub struct UnityRenderingExtTextureUpdateParamsV1 {
    pub texData: *mut ::std::os::raw::c_void,
    pub userData: ::std::os::raw::c_uint,
    pub textureID: ::std::os::raw::c_uint,
    pub format: UnityRenderingExtTextureFormat,
    pub width: ::std::os::raw::c_uint,
    pub height: ::std::os::raw::c_uint,
    pub bpp: ::std::os::raw::c_uint,
}
#[test]
fn bindgen_test_layout_UnityRenderingExtTextureUpdateParamsV1() {
    assert_eq!(
        ::std::mem::size_of::<UnityRenderingExtTextureUpdateParamsV1>(),
        32usize,
        concat!(
            "Size of: ",
            stringify!(UnityRenderingExtTextureUpdateParamsV1)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<UnityRenderingExtTextureUpdateParamsV1>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(UnityRenderingExtTextureUpdateParamsV1)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<UnityRenderingExtTextureUpdateParamsV1>())).texData as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityRenderingExtTextureUpdateParamsV1),
            "::",
            stringify!(texData)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<UnityRenderingExtTextureUpdateParamsV1>())).userData as *const _
                as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityRenderingExtTextureUpdateParamsV1),
            "::",
            stringify!(userData)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<UnityRenderingExtTextureUpdateParamsV1>())).textureID as *const _
                as usize
        },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityRenderingExtTextureUpdateParamsV1),
            "::",
            stringify!(textureID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<UnityRenderingExtTextureUpdateParamsV1>())).format as *const _
                as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityRenderingExtTextureUpdateParamsV1),
            "::",
            stringify!(format)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<UnityRenderingExtTextureUpdateParamsV1>())).width as *const _
                as usize
        },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityRenderingExtTextureUpdateParamsV1),
            "::",
            stringify!(width)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<UnityRenderingExtTextureUpdateParamsV1>())).height as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityRenderingExtTextureUpdateParamsV1),
            "::",
            stringify!(height)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<UnityRenderingExtTextureUpdateParamsV1>())).bpp as *const _
                as usize
        },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityRenderingExtTextureUpdateParamsV1),
            "::",
            stringify!(bpp)
        )
    );
}
impl Default for UnityRenderingExtTextureUpdateParamsV1 {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type UnityRenderingExtTextureUpdateParams = UnityRenderingExtTextureUpdateParamsV1;
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq, Eq)]
pub struct UnityRenderingExtTextureUpdateParamsV2 {
    pub texData: *mut ::std::os::raw::c_void,
    pub textureID: isize,
    pub userData: ::std::os::raw::c_uint,
    pub format: UnityRenderingExtTextureFormat,
    pub width: ::std::os::raw::c_uint,
    pub height: ::std::os::raw::c_uint,
    pub bpp: ::std::os::raw::c_uint,
}
#[test]
fn bindgen_test_layout_UnityRenderingExtTextureUpdateParamsV2() {
    assert_eq!(
        ::std::mem::size_of::<UnityRenderingExtTextureUpdateParamsV2>(),
        40usize,
        concat!(
            "Size of: ",
            stringify!(UnityRenderingExtTextureUpdateParamsV2)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<UnityRenderingExtTextureUpdateParamsV2>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(UnityRenderingExtTextureUpdateParamsV2)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<UnityRenderingExtTextureUpdateParamsV2>())).texData as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityRenderingExtTextureUpdateParamsV2),
            "::",
            stringify!(texData)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<UnityRenderingExtTextureUpdateParamsV2>())).textureID as *const _
                as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityRenderingExtTextureUpdateParamsV2),
            "::",
            stringify!(textureID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<UnityRenderingExtTextureUpdateParamsV2>())).userData as *const _
                as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityRenderingExtTextureUpdateParamsV2),
            "::",
            stringify!(userData)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<UnityRenderingExtTextureUpdateParamsV2>())).format as *const _
                as usize
        },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityRenderingExtTextureUpdateParamsV2),
            "::",
            stringify!(format)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<UnityRenderingExtTextureUpdateParamsV2>())).width as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityRenderingExtTextureUpdateParamsV2),
            "::",
            stringify!(width)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<UnityRenderingExtTextureUpdateParamsV2>())).height as *const _
                as usize
        },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityRenderingExtTextureUpdateParamsV2),
            "::",
            stringify!(height)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<UnityRenderingExtTextureUpdateParamsV2>())).bpp as *const _
                as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityRenderingExtTextureUpdateParamsV2),
            "::",
            stringify!(bpp)
        )
    );
}
impl Default for UnityRenderingExtTextureUpdateParamsV2 {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
extern "C" {
    pub fn UnityRenderingExtEvent(
        event: UnityRenderingExtEventType,
        data: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn UnityRenderingExtQuery(query: UnityRenderingExtQueryType) -> bool;
}
pub const UnityShaderCompilerExtCompilerPlatform_kUnityShaderCompilerExtCompPlatformUnused0:
    UnityShaderCompilerExtCompilerPlatform = 0;
pub const UnityShaderCompilerExtCompilerPlatform_kUnityShaderCompilerExtCompPlatformUnused1:
    UnityShaderCompilerExtCompilerPlatform = 1;
pub const UnityShaderCompilerExtCompilerPlatform_kUnityShaderCompilerExtCompPlatformUnused2:
    UnityShaderCompilerExtCompilerPlatform = 2;
pub const UnityShaderCompilerExtCompilerPlatform_kUnityShaderCompilerExtCompPlatformUnused3:
    UnityShaderCompilerExtCompilerPlatform = 3;
pub const UnityShaderCompilerExtCompilerPlatform_kUnityShaderCompilerExtCompPlatformD3D11:
    UnityShaderCompilerExtCompilerPlatform = 4;
pub const UnityShaderCompilerExtCompilerPlatform_kUnityShaderCompilerExtCompPlatformGLES20:
    UnityShaderCompilerExtCompilerPlatform = 5;
pub const UnityShaderCompilerExtCompilerPlatform_kUnityShaderCompilerExtCompPlatformUnused6:
    UnityShaderCompilerExtCompilerPlatform = 6;
pub const UnityShaderCompilerExtCompilerPlatform_kUnityShaderCompilerExtCompPlatformUnused7:
    UnityShaderCompilerExtCompilerPlatform = 7;
pub const UnityShaderCompilerExtCompilerPlatform_kUnityShaderCompilerExtCompPlatformUnused8:
    UnityShaderCompilerExtCompilerPlatform = 8;
pub const UnityShaderCompilerExtCompilerPlatform_kUnityShaderCompilerExtCompPlatformGLES3Plus:
    UnityShaderCompilerExtCompilerPlatform = 9;
pub const UnityShaderCompilerExtCompilerPlatform_kUnityShaderCompilerExtCompPlatformUnused10:
    UnityShaderCompilerExtCompilerPlatform = 10;
pub const UnityShaderCompilerExtCompilerPlatform_kUnityShaderCompilerExtCompPlatformPS4:
    UnityShaderCompilerExtCompilerPlatform = 11;
pub const UnityShaderCompilerExtCompilerPlatform_kUnityShaderCompilerExtCompPlatformXboxOne:
    UnityShaderCompilerExtCompilerPlatform = 12;
pub const UnityShaderCompilerExtCompilerPlatform_kUnityShaderCompilerExtCompPlatformUnused13:
    UnityShaderCompilerExtCompilerPlatform = 13;
pub const UnityShaderCompilerExtCompilerPlatform_kUnityShaderCompilerExtCompPlatformMetal:
    UnityShaderCompilerExtCompilerPlatform = 14;
pub const UnityShaderCompilerExtCompilerPlatform_kUnityShaderCompilerExtCompPlatformOpenGLCore:
    UnityShaderCompilerExtCompilerPlatform = 15;
pub const UnityShaderCompilerExtCompilerPlatform_kUnityShaderCompilerExtCompPlatformUnused16:
    UnityShaderCompilerExtCompilerPlatform = 16;
pub const UnityShaderCompilerExtCompilerPlatform_kUnityShaderCompilerExtCompPlatformUnused17:
    UnityShaderCompilerExtCompilerPlatform = 17;
pub const UnityShaderCompilerExtCompilerPlatform_kUnityShaderCompilerExtCompPlatformVulkan:
    UnityShaderCompilerExtCompilerPlatform = 18;
pub const UnityShaderCompilerExtCompilerPlatform_kUnityShaderCompilerExtCompPlatformSwitch:
    UnityShaderCompilerExtCompilerPlatform = 19;
pub const UnityShaderCompilerExtCompilerPlatform_kUnityShaderCompilerExtCompPlatformXboxOneD3D12:
    UnityShaderCompilerExtCompilerPlatform = 20;
pub const UnityShaderCompilerExtCompilerPlatform_kUnityShaderCompilerExtCompPlatformCount:
    UnityShaderCompilerExtCompilerPlatform = 21;
pub type UnityShaderCompilerExtCompilerPlatform = ::std::os::raw::c_uint;
pub const UnityShaderCompilerExtShaderType_kUnityShaderCompilerExtShaderNone:
    UnityShaderCompilerExtShaderType = 0;
pub const UnityShaderCompilerExtShaderType_kUnityShaderCompilerExtShaderVertex:
    UnityShaderCompilerExtShaderType = 1;
pub const UnityShaderCompilerExtShaderType_kUnityShaderCompilerExtShaderFragment:
    UnityShaderCompilerExtShaderType = 2;
pub const UnityShaderCompilerExtShaderType_kUnityShaderCompilerExtShaderGeometry:
    UnityShaderCompilerExtShaderType = 3;
pub const UnityShaderCompilerExtShaderType_kUnityShaderCompilerExtShaderHull:
    UnityShaderCompilerExtShaderType = 4;
pub const UnityShaderCompilerExtShaderType_kUnityShaderCompilerExtShaderDomain:
    UnityShaderCompilerExtShaderType = 5;
pub const UnityShaderCompilerExtShaderType_kUnityShaderCompilerExtShaderRayTracing:
    UnityShaderCompilerExtShaderType = 6;
pub const UnityShaderCompilerExtShaderType_kUnityShaderCompilerExtShaderTypeCount:
    UnityShaderCompilerExtShaderType = 7;
pub type UnityShaderCompilerExtShaderType = ::std::os::raw::c_uint;
pub const UnityShaderCompilerExtGPUProgramType_kUnityShaderCompilerExtGPUProgramTargetUnknown:
    UnityShaderCompilerExtGPUProgramType = 0;
pub const UnityShaderCompilerExtGPUProgramType_kUnityShaderCompilerExtGPUProgramTargetGLLegacy:
    UnityShaderCompilerExtGPUProgramType = 1;
pub const UnityShaderCompilerExtGPUProgramType_kUnityShaderCompilerExtGPUProgramTargetGLES31AEP:
    UnityShaderCompilerExtGPUProgramType = 2;
pub const UnityShaderCompilerExtGPUProgramType_kUnityShaderCompilerExtGPUProgramTargetGLES31:
    UnityShaderCompilerExtGPUProgramType = 3;
pub const UnityShaderCompilerExtGPUProgramType_kUnityShaderCompilerExtGPUProgramTargetGLES3:
    UnityShaderCompilerExtGPUProgramType = 4;
pub const UnityShaderCompilerExtGPUProgramType_kUnityShaderCompilerExtGPUProgramTargetGLES:
    UnityShaderCompilerExtGPUProgramType = 5;
pub const UnityShaderCompilerExtGPUProgramType_kUnityShaderCompilerExtGPUProgramTargetGLCore32:
    UnityShaderCompilerExtGPUProgramType = 6;
pub const UnityShaderCompilerExtGPUProgramType_kUnityShaderCompilerExtGPUProgramTargetGLCore41:
    UnityShaderCompilerExtGPUProgramType = 7;
pub const UnityShaderCompilerExtGPUProgramType_kUnityShaderCompilerExtGPUProgramTargetGLCore43:
    UnityShaderCompilerExtGPUProgramType = 8;
pub const UnityShaderCompilerExtGPUProgramType_kUnityShaderCompilerExtGPUProgramTargetDX9VertexSM20 : UnityShaderCompilerExtGPUProgramType = 9 ;
pub const UnityShaderCompilerExtGPUProgramType_kUnityShaderCompilerExtGPUProgramTargetDX9VertexSM30 : UnityShaderCompilerExtGPUProgramType = 10 ;
pub const UnityShaderCompilerExtGPUProgramType_kUnityShaderCompilerExtGPUProgramTargetDX9PixelSM20 : UnityShaderCompilerExtGPUProgramType = 11 ;
pub const UnityShaderCompilerExtGPUProgramType_kUnityShaderCompilerExtGPUProgramTargetDX9PixelSM30 : UnityShaderCompilerExtGPUProgramType = 12 ;
pub const UnityShaderCompilerExtGPUProgramType_kUnityShaderCompilerExtGPUProgramTargetDX10Level9Vertex : UnityShaderCompilerExtGPUProgramType = 13 ;
pub const UnityShaderCompilerExtGPUProgramType_kUnityShaderCompilerExtGPUProgramTargetDX10Level9Pixel : UnityShaderCompilerExtGPUProgramType = 14 ;
pub const UnityShaderCompilerExtGPUProgramType_kUnityShaderCompilerExtGPUProgramTargetDX11VertexSM40 : UnityShaderCompilerExtGPUProgramType = 15 ;
pub const UnityShaderCompilerExtGPUProgramType_kUnityShaderCompilerExtGPUProgramTargetDX11VertexSM50 : UnityShaderCompilerExtGPUProgramType = 16 ;
pub const UnityShaderCompilerExtGPUProgramType_kUnityShaderCompilerExtGPUProgramTargetDX11PixelSM40 : UnityShaderCompilerExtGPUProgramType = 17 ;
pub const UnityShaderCompilerExtGPUProgramType_kUnityShaderCompilerExtGPUProgramTargetDX11PixelSM50 : UnityShaderCompilerExtGPUProgramType = 18 ;
pub const UnityShaderCompilerExtGPUProgramType_kUnityShaderCompilerExtGPUProgramTargetDX11GeometrySM40 : UnityShaderCompilerExtGPUProgramType = 19 ;
pub const UnityShaderCompilerExtGPUProgramType_kUnityShaderCompilerExtGPUProgramTargetDX11GeometrySM50 : UnityShaderCompilerExtGPUProgramType = 20 ;
pub const UnityShaderCompilerExtGPUProgramType_kUnityShaderCompilerExtGPUProgramTargetDX11HullSM50 : UnityShaderCompilerExtGPUProgramType = 21 ;
pub const UnityShaderCompilerExtGPUProgramType_kUnityShaderCompilerExtGPUProgramTargetDX11DomainSM50 : UnityShaderCompilerExtGPUProgramType = 22 ;
pub const UnityShaderCompilerExtGPUProgramType_kUnityShaderCompilerExtGPUProgramTargetMetalVS:
    UnityShaderCompilerExtGPUProgramType = 23;
pub const UnityShaderCompilerExtGPUProgramType_kUnityShaderCompilerExtGPUProgramTargetMetalFS:
    UnityShaderCompilerExtGPUProgramType = 24;
pub const UnityShaderCompilerExtGPUProgramType_kUnityShaderCompilerExtGPUProgramTargetSPIRV:
    UnityShaderCompilerExtGPUProgramType = 25;
pub const UnityShaderCompilerExtGPUProgramType_kUnityShaderCompilerExtGPUProgramTargetUnused1:
    UnityShaderCompilerExtGPUProgramType = 26;
pub const UnityShaderCompilerExtGPUProgramType_kUnityShaderCompilerExtGPUProgramTargetUnused2:
    UnityShaderCompilerExtGPUProgramType = 27;
pub const UnityShaderCompilerExtGPUProgramType_kUnityShaderCompilerExtGPUProgramTargetUnused3:
    UnityShaderCompilerExtGPUProgramType = 28;
pub const UnityShaderCompilerExtGPUProgramType_kUnityShaderCompilerExtGPUProgramTargetUnused4:
    UnityShaderCompilerExtGPUProgramType = 29;
pub const UnityShaderCompilerExtGPUProgramType_kUnityShaderCompilerExtGPUProgramTargetUnused5:
    UnityShaderCompilerExtGPUProgramType = 30;
pub const UnityShaderCompilerExtGPUProgramType_kUnityShaderCompilerExtGPUProgramTargetRayTracing:
    UnityShaderCompilerExtGPUProgramType = 31;
pub const UnityShaderCompilerExtGPUProgramType_kUnityShaderCompilerExtGPUProgramTargetCount:
    UnityShaderCompilerExtGPUProgramType = 32;
pub type UnityShaderCompilerExtGPUProgramType = ::std::os::raw::c_uint;
pub const UnityShaderCompilerExtGPUProgram_kUnityShaderCompilerExtGPUProgramVS:
    UnityShaderCompilerExtGPUProgram = 2;
pub const UnityShaderCompilerExtGPUProgram_kUnityShaderCompilerExtGPUProgramPS:
    UnityShaderCompilerExtGPUProgram = 4;
pub const UnityShaderCompilerExtGPUProgram_kUnityShaderCompilerExtGPUProgramGS:
    UnityShaderCompilerExtGPUProgram = 8;
pub const UnityShaderCompilerExtGPUProgram_kUnityShaderCompilerExtGPUProgramHS:
    UnityShaderCompilerExtGPUProgram = 16;
pub const UnityShaderCompilerExtGPUProgram_kUnityShaderCompilerExtGPUProgramDS:
    UnityShaderCompilerExtGPUProgram = 32;
pub const UnityShaderCompilerExtGPUProgram_kUnityShaderCompilerExtGPUProgramCustom:
    UnityShaderCompilerExtGPUProgram = 128;
pub type UnityShaderCompilerExtGPUProgram = ::std::os::raw::c_uint;
pub const UnityShaderCompilerExtEventType_kUnityShaderCompilerExtEventCreateCustomSourceVariant:
    UnityShaderCompilerExtEventType = 0;
pub const UnityShaderCompilerExtEventType_kUnityShaderCompilerExtEventCreateCustomSourceVariantCleanup : UnityShaderCompilerExtEventType = 1 ;
pub const UnityShaderCompilerExtEventType_kUnityShaderCompilerExtEventCreateCustomBinaryVariant:
    UnityShaderCompilerExtEventType = 2;
pub const UnityShaderCompilerExtEventType_kUnityShaderCompilerExtEventCreateCustomBinaryVariantCleanup : UnityShaderCompilerExtEventType = 3 ;
pub const UnityShaderCompilerExtEventType_kUnityShaderCompilerExtEventPluginConfigure:
    UnityShaderCompilerExtEventType = 4;
pub const UnityShaderCompilerExtEventType_kUnityShaderCompilerExtEventCount:
    UnityShaderCompilerExtEventType = 5;
pub const UnityShaderCompilerExtEventType_kUnityShaderCompilerExtUserEventsStart:
    UnityShaderCompilerExtEventType = 5;
pub type UnityShaderCompilerExtEventType = ::std::os::raw::c_uint;
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq, Eq)]
pub struct UnityShaderCompilerExtCustomSourceVariantParams {
    pub outputSnippet: *mut ::std::os::raw::c_char,
    pub outputKeywords: *mut ::std::os::raw::c_char,
    pub inputSnippet: *const ::std::os::raw::c_char,
    pub vr: bool,
    pub platform: UnityShaderCompilerExtCompilerPlatform,
    pub shaderType: UnityShaderCompilerExtShaderType,
}
#[test]
fn bindgen_test_layout_UnityShaderCompilerExtCustomSourceVariantParams() {
    assert_eq!(
        ::std::mem::size_of::<UnityShaderCompilerExtCustomSourceVariantParams>(),
        40usize,
        concat!(
            "Size of: ",
            stringify!(UnityShaderCompilerExtCustomSourceVariantParams)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<UnityShaderCompilerExtCustomSourceVariantParams>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(UnityShaderCompilerExtCustomSourceVariantParams)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<UnityShaderCompilerExtCustomSourceVariantParams>()))
                .outputSnippet as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityShaderCompilerExtCustomSourceVariantParams),
            "::",
            stringify!(outputSnippet)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<UnityShaderCompilerExtCustomSourceVariantParams>()))
                .outputKeywords as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityShaderCompilerExtCustomSourceVariantParams),
            "::",
            stringify!(outputKeywords)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<UnityShaderCompilerExtCustomSourceVariantParams>())).inputSnippet
                as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityShaderCompilerExtCustomSourceVariantParams),
            "::",
            stringify!(inputSnippet)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<UnityShaderCompilerExtCustomSourceVariantParams>())).vr
                as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityShaderCompilerExtCustomSourceVariantParams),
            "::",
            stringify!(vr)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<UnityShaderCompilerExtCustomSourceVariantParams>())).platform
                as *const _ as usize
        },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityShaderCompilerExtCustomSourceVariantParams),
            "::",
            stringify!(platform)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<UnityShaderCompilerExtCustomSourceVariantParams>())).shaderType
                as *const _ as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityShaderCompilerExtCustomSourceVariantParams),
            "::",
            stringify!(shaderType)
        )
    );
}
impl Default for UnityShaderCompilerExtCustomSourceVariantParams {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq, Eq)]
pub struct UnityShaderCompilerExtCustomBinaryVariantParams {
    pub outputBinaryShader: *mut *mut ::std::os::raw::c_void,
    pub inputByteCode: *const ::std::os::raw::c_uchar,
    pub inputByteCodeSize: ::std::os::raw::c_uint,
    pub programTypeMask: ::std::os::raw::c_uint,
    pub platform: UnityShaderCompilerExtCompilerPlatform,
}
#[test]
fn bindgen_test_layout_UnityShaderCompilerExtCustomBinaryVariantParams() {
    assert_eq!(
        ::std::mem::size_of::<UnityShaderCompilerExtCustomBinaryVariantParams>(),
        32usize,
        concat!(
            "Size of: ",
            stringify!(UnityShaderCompilerExtCustomBinaryVariantParams)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<UnityShaderCompilerExtCustomBinaryVariantParams>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(UnityShaderCompilerExtCustomBinaryVariantParams)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<UnityShaderCompilerExtCustomBinaryVariantParams>()))
                .outputBinaryShader as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityShaderCompilerExtCustomBinaryVariantParams),
            "::",
            stringify!(outputBinaryShader)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<UnityShaderCompilerExtCustomBinaryVariantParams>()))
                .inputByteCode as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityShaderCompilerExtCustomBinaryVariantParams),
            "::",
            stringify!(inputByteCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<UnityShaderCompilerExtCustomBinaryVariantParams>()))
                .inputByteCodeSize as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityShaderCompilerExtCustomBinaryVariantParams),
            "::",
            stringify!(inputByteCodeSize)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<UnityShaderCompilerExtCustomBinaryVariantParams>()))
                .programTypeMask as *const _ as usize
        },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityShaderCompilerExtCustomBinaryVariantParams),
            "::",
            stringify!(programTypeMask)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<UnityShaderCompilerExtCustomBinaryVariantParams>())).platform
                as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityShaderCompilerExtCustomBinaryVariantParams),
            "::",
            stringify!(platform)
        )
    );
}
impl Default for UnityShaderCompilerExtCustomBinaryVariantParams {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
pub struct IUnityShaderCompilerExtPluginConfigure__bindgen_vtable(::std::os::raw::c_void);
#[repr(C)]
#[derive(Debug, PartialEq, Eq)]
pub struct IUnityShaderCompilerExtPluginConfigure {
    pub vtable_: *const IUnityShaderCompilerExtPluginConfigure__bindgen_vtable,
}
#[test]
fn bindgen_test_layout_IUnityShaderCompilerExtPluginConfigure() {
    assert_eq!(
        ::std::mem::size_of::<IUnityShaderCompilerExtPluginConfigure>(),
        8usize,
        concat!(
            "Size of: ",
            stringify!(IUnityShaderCompilerExtPluginConfigure)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<IUnityShaderCompilerExtPluginConfigure>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(IUnityShaderCompilerExtPluginConfigure)
        )
    );
}
impl Default for IUnityShaderCompilerExtPluginConfigure {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
extern "C" {
    pub fn UnityShaderCompilerExtEvent(
        event: UnityShaderCompilerExtEventType,
        data: *mut ::std::os::raw::c_void,
    );
}
pub type ID3D11Device = *mut ::std::os::raw::c_void;
pub type ID3D11Resource = *mut ::std::os::raw::c_void;
pub type ID3D11RenderTargetView = *mut ::std::os::raw::c_void;
pub type ID3D11ShaderResourceView = *mut ::std::os::raw::c_void;
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, PartialEq, Eq)]
pub struct IUnityGraphicsD3D11 {
    pub GetDevice: ::std::option::Option<unsafe extern "C" fn() -> *mut ID3D11Device>,
    pub TextureFromRenderBuffer: ::std::option::Option<
        unsafe extern "C" fn(buffer: UnityRenderBuffer) -> *mut ID3D11Resource,
    >,
    pub TextureFromNativeTexture:
        ::std::option::Option<unsafe extern "C" fn(texture: UnityTextureID) -> *mut ID3D11Resource>,
    pub RTVFromRenderBuffer: ::std::option::Option<
        unsafe extern "C" fn(surface: UnityRenderBuffer) -> *mut ID3D11RenderTargetView,
    >,
    pub SRVFromNativeTexture: ::std::option::Option<
        unsafe extern "C" fn(texture: UnityTextureID) -> *mut ID3D11ShaderResourceView,
    >,
}
#[test]
fn bindgen_test_layout_IUnityGraphicsD3D11() {
    assert_eq!(
        ::std::mem::size_of::<IUnityGraphicsD3D11>(),
        40usize,
        concat!("Size of: ", stringify!(IUnityGraphicsD3D11))
    );
    assert_eq!(
        ::std::mem::align_of::<IUnityGraphicsD3D11>(),
        8usize,
        concat!("Alignment of ", stringify!(IUnityGraphicsD3D11))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IUnityGraphicsD3D11>())).GetDevice as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityGraphicsD3D11),
            "::",
            stringify!(GetDevice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<IUnityGraphicsD3D11>())).TextureFromRenderBuffer as *const _
                as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityGraphicsD3D11),
            "::",
            stringify!(TextureFromRenderBuffer)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<IUnityGraphicsD3D11>())).TextureFromNativeTexture as *const _
                as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityGraphicsD3D11),
            "::",
            stringify!(TextureFromNativeTexture)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<IUnityGraphicsD3D11>())).RTVFromRenderBuffer as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityGraphicsD3D11),
            "::",
            stringify!(RTVFromRenderBuffer)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<IUnityGraphicsD3D11>())).SRVFromNativeTexture as *const _
                as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityGraphicsD3D11),
            "::",
            stringify!(SRVFromNativeTexture)
        )
    );
}
pub type D3D12_RESOURCE_STATES = i32;
pub type UINT64 = u64;
pub type ID3D12Resource = *mut ::std::os::raw::c_void;
pub type ID3D12Device = *mut ::std::os::raw::c_void;
pub type ID3D12Fence = *mut ::std::os::raw::c_void;
pub type ID3D12GraphicsCommandList = *mut ::std::os::raw::c_void;
pub type ID3D12CommandQueue = *mut ::std::os::raw::c_void;
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq, Eq)]
pub struct UnityGraphicsD3D12ResourceState {
    pub resource: *mut ID3D12Resource,
    pub expected: D3D12_RESOURCE_STATES,
    pub current: D3D12_RESOURCE_STATES,
}
#[test]
fn bindgen_test_layout_UnityGraphicsD3D12ResourceState() {
    assert_eq!(
        ::std::mem::size_of::<UnityGraphicsD3D12ResourceState>(),
        16usize,
        concat!("Size of: ", stringify!(UnityGraphicsD3D12ResourceState))
    );
    assert_eq!(
        ::std::mem::align_of::<UnityGraphicsD3D12ResourceState>(),
        8usize,
        concat!("Alignment of ", stringify!(UnityGraphicsD3D12ResourceState))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<UnityGraphicsD3D12ResourceState>())).resource as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityGraphicsD3D12ResourceState),
            "::",
            stringify!(resource)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<UnityGraphicsD3D12ResourceState>())).expected as *const _
                as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityGraphicsD3D12ResourceState),
            "::",
            stringify!(expected)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<UnityGraphicsD3D12ResourceState>())).current as *const _ as usize
        },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityGraphicsD3D12ResourceState),
            "::",
            stringify!(current)
        )
    );
}
impl Default for UnityGraphicsD3D12ResourceState {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, PartialEq, Eq)]
pub struct UnityGraphicsD3D12PhysicalVideoMemoryControlValues {
    pub reservation: UINT64,
    pub systemMemoryThreshold: UINT64,
    pub residencyThreshold: UINT64,
}
#[test]
fn bindgen_test_layout_UnityGraphicsD3D12PhysicalVideoMemoryControlValues() {
    assert_eq!(
        ::std::mem::size_of::<UnityGraphicsD3D12PhysicalVideoMemoryControlValues>(),
        24usize,
        concat!(
            "Size of: ",
            stringify!(UnityGraphicsD3D12PhysicalVideoMemoryControlValues)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<UnityGraphicsD3D12PhysicalVideoMemoryControlValues>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(UnityGraphicsD3D12PhysicalVideoMemoryControlValues)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<UnityGraphicsD3D12PhysicalVideoMemoryControlValues>()))
                .reservation as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityGraphicsD3D12PhysicalVideoMemoryControlValues),
            "::",
            stringify!(reservation)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<UnityGraphicsD3D12PhysicalVideoMemoryControlValues>()))
                .systemMemoryThreshold as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityGraphicsD3D12PhysicalVideoMemoryControlValues),
            "::",
            stringify!(systemMemoryThreshold)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<UnityGraphicsD3D12PhysicalVideoMemoryControlValues>()))
                .residencyThreshold as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(UnityGraphicsD3D12PhysicalVideoMemoryControlValues),
            "::",
            stringify!(residencyThreshold)
        )
    );
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, PartialEq, Eq)]
pub struct IUnityGraphicsD3D12v5 {
    pub GetDevice: ::std::option::Option<unsafe extern "C" fn() -> *mut ID3D12Device>,
    pub GetFrameFence: ::std::option::Option<unsafe extern "C" fn() -> *mut ID3D12Fence>,
    pub GetNextFrameFenceValue: ::std::option::Option<unsafe extern "C" fn() -> UINT64>,
    pub ExecuteCommandList: ::std::option::Option<
        unsafe extern "C" fn(
            commandList: *mut ID3D12GraphicsCommandList,
            stateCount: ::std::os::raw::c_int,
            states: *mut UnityGraphicsD3D12ResourceState,
        ) -> UINT64,
    >,
    pub SetPhysicalVideoMemoryControlValues: ::std::option::Option<
        unsafe extern "C" fn(memInfo: *const UnityGraphicsD3D12PhysicalVideoMemoryControlValues),
    >,
    pub GetCommandQueue: ::std::option::Option<unsafe extern "C" fn() -> *mut ID3D12CommandQueue>,
    pub TextureFromRenderBuffer: ::std::option::Option<
        unsafe extern "C" fn(rb: *mut UnityRenderBuffer) -> *mut ID3D12Resource,
    >,
}
#[test]
fn bindgen_test_layout_IUnityGraphicsD3D12v5() {
    assert_eq!(
        ::std::mem::size_of::<IUnityGraphicsD3D12v5>(),
        56usize,
        concat!("Size of: ", stringify!(IUnityGraphicsD3D12v5))
    );
    assert_eq!(
        ::std::mem::align_of::<IUnityGraphicsD3D12v5>(),
        8usize,
        concat!("Alignment of ", stringify!(IUnityGraphicsD3D12v5))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IUnityGraphicsD3D12v5>())).GetDevice as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityGraphicsD3D12v5),
            "::",
            stringify!(GetDevice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<IUnityGraphicsD3D12v5>())).GetFrameFence as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityGraphicsD3D12v5),
            "::",
            stringify!(GetFrameFence)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<IUnityGraphicsD3D12v5>())).GetNextFrameFenceValue as *const _
                as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityGraphicsD3D12v5),
            "::",
            stringify!(GetNextFrameFenceValue)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<IUnityGraphicsD3D12v5>())).ExecuteCommandList as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityGraphicsD3D12v5),
            "::",
            stringify!(ExecuteCommandList)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<IUnityGraphicsD3D12v5>())).SetPhysicalVideoMemoryControlValues
                as *const _ as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityGraphicsD3D12v5),
            "::",
            stringify!(SetPhysicalVideoMemoryControlValues)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<IUnityGraphicsD3D12v5>())).GetCommandQueue as *const _ as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityGraphicsD3D12v5),
            "::",
            stringify!(GetCommandQueue)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<IUnityGraphicsD3D12v5>())).TextureFromRenderBuffer as *const _
                as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityGraphicsD3D12v5),
            "::",
            stringify!(TextureFromRenderBuffer)
        )
    );
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, PartialEq, Eq)]
pub struct IUnityGraphicsD3D12v4 {
    pub GetDevice: ::std::option::Option<unsafe extern "C" fn() -> *mut ID3D12Device>,
    pub GetFrameFence: ::std::option::Option<unsafe extern "C" fn() -> *mut ID3D12Fence>,
    pub GetNextFrameFenceValue: ::std::option::Option<unsafe extern "C" fn() -> UINT64>,
    pub ExecuteCommandList: ::std::option::Option<
        unsafe extern "C" fn(
            commandList: *mut ID3D12GraphicsCommandList,
            stateCount: ::std::os::raw::c_int,
            states: *mut UnityGraphicsD3D12ResourceState,
        ) -> UINT64,
    >,
    pub SetPhysicalVideoMemoryControlValues: ::std::option::Option<
        unsafe extern "C" fn(memInfo: *const UnityGraphicsD3D12PhysicalVideoMemoryControlValues),
    >,
    pub GetCommandQueue: ::std::option::Option<unsafe extern "C" fn() -> *mut ID3D12CommandQueue>,
}
#[test]
fn bindgen_test_layout_IUnityGraphicsD3D12v4() {
    assert_eq!(
        ::std::mem::size_of::<IUnityGraphicsD3D12v4>(),
        48usize,
        concat!("Size of: ", stringify!(IUnityGraphicsD3D12v4))
    );
    assert_eq!(
        ::std::mem::align_of::<IUnityGraphicsD3D12v4>(),
        8usize,
        concat!("Alignment of ", stringify!(IUnityGraphicsD3D12v4))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IUnityGraphicsD3D12v4>())).GetDevice as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityGraphicsD3D12v4),
            "::",
            stringify!(GetDevice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<IUnityGraphicsD3D12v4>())).GetFrameFence as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityGraphicsD3D12v4),
            "::",
            stringify!(GetFrameFence)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<IUnityGraphicsD3D12v4>())).GetNextFrameFenceValue as *const _
                as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityGraphicsD3D12v4),
            "::",
            stringify!(GetNextFrameFenceValue)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<IUnityGraphicsD3D12v4>())).ExecuteCommandList as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityGraphicsD3D12v4),
            "::",
            stringify!(ExecuteCommandList)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<IUnityGraphicsD3D12v4>())).SetPhysicalVideoMemoryControlValues
                as *const _ as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityGraphicsD3D12v4),
            "::",
            stringify!(SetPhysicalVideoMemoryControlValues)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<IUnityGraphicsD3D12v4>())).GetCommandQueue as *const _ as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityGraphicsD3D12v4),
            "::",
            stringify!(GetCommandQueue)
        )
    );
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, PartialEq, Eq)]
pub struct IUnityGraphicsD3D12v3 {
    pub GetDevice: ::std::option::Option<unsafe extern "C" fn() -> *mut ID3D12Device>,
    pub GetFrameFence: ::std::option::Option<unsafe extern "C" fn() -> *mut ID3D12Fence>,
    pub GetNextFrameFenceValue: ::std::option::Option<unsafe extern "C" fn() -> UINT64>,
    pub ExecuteCommandList: ::std::option::Option<
        unsafe extern "C" fn(
            commandList: *mut ID3D12GraphicsCommandList,
            stateCount: ::std::os::raw::c_int,
            states: *mut UnityGraphicsD3D12ResourceState,
        ) -> UINT64,
    >,
    pub SetPhysicalVideoMemoryControlValues: ::std::option::Option<
        unsafe extern "C" fn(memInfo: *const UnityGraphicsD3D12PhysicalVideoMemoryControlValues),
    >,
}
#[test]
fn bindgen_test_layout_IUnityGraphicsD3D12v3() {
    assert_eq!(
        ::std::mem::size_of::<IUnityGraphicsD3D12v3>(),
        40usize,
        concat!("Size of: ", stringify!(IUnityGraphicsD3D12v3))
    );
    assert_eq!(
        ::std::mem::align_of::<IUnityGraphicsD3D12v3>(),
        8usize,
        concat!("Alignment of ", stringify!(IUnityGraphicsD3D12v3))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IUnityGraphicsD3D12v3>())).GetDevice as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityGraphicsD3D12v3),
            "::",
            stringify!(GetDevice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<IUnityGraphicsD3D12v3>())).GetFrameFence as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityGraphicsD3D12v3),
            "::",
            stringify!(GetFrameFence)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<IUnityGraphicsD3D12v3>())).GetNextFrameFenceValue as *const _
                as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityGraphicsD3D12v3),
            "::",
            stringify!(GetNextFrameFenceValue)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<IUnityGraphicsD3D12v3>())).ExecuteCommandList as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityGraphicsD3D12v3),
            "::",
            stringify!(ExecuteCommandList)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<IUnityGraphicsD3D12v3>())).SetPhysicalVideoMemoryControlValues
                as *const _ as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityGraphicsD3D12v3),
            "::",
            stringify!(SetPhysicalVideoMemoryControlValues)
        )
    );
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, PartialEq, Eq)]
pub struct IUnityGraphicsD3D12v2 {
    pub GetDevice: ::std::option::Option<unsafe extern "C" fn() -> *mut ID3D12Device>,
    pub GetFrameFence: ::std::option::Option<unsafe extern "C" fn() -> *mut ID3D12Fence>,
    pub GetNextFrameFenceValue: ::std::option::Option<unsafe extern "C" fn() -> UINT64>,
    pub ExecuteCommandList: ::std::option::Option<
        unsafe extern "C" fn(
            commandList: *mut ID3D12GraphicsCommandList,
            stateCount: ::std::os::raw::c_int,
            states: *mut UnityGraphicsD3D12ResourceState,
        ) -> UINT64,
    >,
}
#[test]
fn bindgen_test_layout_IUnityGraphicsD3D12v2() {
    assert_eq!(
        ::std::mem::size_of::<IUnityGraphicsD3D12v2>(),
        32usize,
        concat!("Size of: ", stringify!(IUnityGraphicsD3D12v2))
    );
    assert_eq!(
        ::std::mem::align_of::<IUnityGraphicsD3D12v2>(),
        8usize,
        concat!("Alignment of ", stringify!(IUnityGraphicsD3D12v2))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IUnityGraphicsD3D12v2>())).GetDevice as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityGraphicsD3D12v2),
            "::",
            stringify!(GetDevice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<IUnityGraphicsD3D12v2>())).GetFrameFence as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityGraphicsD3D12v2),
            "::",
            stringify!(GetFrameFence)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<IUnityGraphicsD3D12v2>())).GetNextFrameFenceValue as *const _
                as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityGraphicsD3D12v2),
            "::",
            stringify!(GetNextFrameFenceValue)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<IUnityGraphicsD3D12v2>())).ExecuteCommandList as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityGraphicsD3D12v2),
            "::",
            stringify!(ExecuteCommandList)
        )
    );
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, PartialEq, Eq)]
pub struct IUnityGraphicsD3D12 {
    pub GetDevice: ::std::option::Option<unsafe extern "C" fn() -> *mut ID3D12Device>,
    pub GetCommandQueue: ::std::option::Option<unsafe extern "C" fn() -> *mut ID3D12CommandQueue>,
    pub GetFrameFence: ::std::option::Option<unsafe extern "C" fn() -> *mut ID3D12Fence>,
    pub GetNextFrameFenceValue: ::std::option::Option<unsafe extern "C" fn() -> UINT64>,
    pub GetResourceState: ::std::option::Option<
        unsafe extern "C" fn(
            resource: *mut ID3D12Resource,
            outState: *mut D3D12_RESOURCE_STATES,
        ) -> bool,
    >,
    pub SetResourceState: ::std::option::Option<
        unsafe extern "C" fn(resource: *mut ID3D12Resource, state: D3D12_RESOURCE_STATES),
    >,
}
#[test]
fn bindgen_test_layout_IUnityGraphicsD3D12() {
    assert_eq!(
        ::std::mem::size_of::<IUnityGraphicsD3D12>(),
        48usize,
        concat!("Size of: ", stringify!(IUnityGraphicsD3D12))
    );
    assert_eq!(
        ::std::mem::align_of::<IUnityGraphicsD3D12>(),
        8usize,
        concat!("Alignment of ", stringify!(IUnityGraphicsD3D12))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IUnityGraphicsD3D12>())).GetDevice as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityGraphicsD3D12),
            "::",
            stringify!(GetDevice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<IUnityGraphicsD3D12>())).GetCommandQueue as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityGraphicsD3D12),
            "::",
            stringify!(GetCommandQueue)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<IUnityGraphicsD3D12>())).GetFrameFence as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityGraphicsD3D12),
            "::",
            stringify!(GetFrameFence)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<IUnityGraphicsD3D12>())).GetNextFrameFenceValue as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityGraphicsD3D12),
            "::",
            stringify!(GetNextFrameFenceValue)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<IUnityGraphicsD3D12>())).GetResourceState as *const _ as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityGraphicsD3D12),
            "::",
            stringify!(GetResourceState)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<IUnityGraphicsD3D12>())).SetResourceState as *const _ as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(IUnityGraphicsD3D12),
            "::",
            stringify!(SetResourceState)
        )
    );
}
